{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Navbar/Navbar.module.css","components/Work examples/Counter/counter.module.css","components/Work examples/ToDoList/ToDoList.module.css","components/Header/Header.module.css","components/MainContent/MainInfo/MainInfo.module.css","components/Header/Contacts/Contacts.module.css","components/MainContent/MyPosts/MyPosts.module.css","components/MainContent/MyPosts/OnePost/Post.module.css","components/Work examples/WorkExamples.module.css","components/Work examples/Rating/Rating.module.css","components/Work examples/Accordion/Accordion.module.css","components/MoreInformation/MoreInformation.module.css","components/MoreInformation/AboutMe.module.css","components/Music/Music.module.css","components/Header/Contacts/Contacts.tsx","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/MainContent/MyPosts/OnePost/Post.tsx","components/MainContent/MyPosts/MyPosts.tsx","redux/profileReduser.tsx","redux/dialogsReduser.tsx","redux/store.tsx","components/MainContent/MyPosts/MyPostConteiner.tsx","components/MainContent/MainInfo/MainInfo.tsx","components/MainContent/MainContent.tsx","components/Work examples/ToDoList/ContainerForToDoList.tsx","components/Work examples/ToDoList/ToDoList.tsx","components/Work examples/Counter/Number.tsx","components/Work examples/Counter/Buttons.tsx","components/Work examples/Counter/Counter.tsx","components/Work examples/Rating/Rating.tsx","components/Work examples/Accordion/Accordion.tsx","components/Work examples/OnOff/OnOff.tsx","components/Work examples/WorkExamples.tsx","components/MoreInformation/AboutMe.tsx","components/MoreInformation/MoreInformation.tsx","components/Music/Music.tsx","components/Dialogs/DialogsItem/DialogItem.tsx","components/Dialogs/MessagesItem/MessagesItem.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","App.tsx","redux/reduxStore.tsx","index.tsx"],"names":["module","exports","Contacts","style","gridArea","className","classes","a","href","Header","header","item","gridContainer","alt","src","Navbar","nav","to","activeClassName","activeLink","Post","props","message","likecount","MyPosts","postsElements","profilePage","postsData","map","p","newPostElement","React","createRef","ref","onChange","current","text","value","postChange","newPostText","onKeyPress","e","key","addPost","onClick","deletePost","post","initialState","id","profileReduser","state","action","type","ADD_POST","stateCopy","push","UPDATE_NEW_POST_TEXT","newText","DELETE_POSTS","dialogs","name","photo","messages","newMessageText","dialogsReduser","UPDATE_NEW_MESSAGE_TEXT","ADD_MESSAGE","MyPostsContainer","connect","dispatch","onPostChangeActionCreator","MainInfo","container","centered","MainContent","ContainerTodoList","tasksJSXelements","tasks","t","isDone","customcCheckbox","changeTaskStatus","currentTarget","checked","title","removeTask","useState","newTaskTitle","setNewTaskTitle","error","setError","addTask","trimmedTitle","trim","classForAll","filter","classForActive","classForCompleted","errorMessage","backgroundColor","color","fontWeight","textAlign","toDoList","event","ctrlKey","placeholder","changeFilter","ToDoList","v1","setTasks","setFilter","tasksForRender","works","taskID","newTask","Number","number","maxValue","setNumber","classNameForNumber","minValue","Buttons","incButton","resetButton","disabledForInc","disabledForReset","s","button","disabled","Counter","forfive","ac","Star","selected","cursor","Rating","rating","setRating","Array","fill","_","i","AccordionTitle","AccordionBody","Accordion","collapsed","setCollapsed","height","titleValue","OnOff","on","setOn","onStyle","width","border","display","padding","offStyle","marginLeft","indicatorStyle","borderRadius","WorkExamples","AboutMe","maim","paddingLeft","MoreInformation","Music","DialogItem","active","Messages","massage","Dialogs","dialogsElements","dialogsPage","d","messagesElements","m","newMessegeElement","dialogsItems","messageChange","addMessage","DialogsContainer","onMessageChangeActionCreator","App","path","render","exact","rootReduser","combineReducers","store","createStore","ReactDOM","basename","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8669b6b1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"activeLink\":\"Dialogs_activeLink__34w6e\",\"messages\":\"Dialogs_messages__1w_Up\",\"item\":\"Dialogs_item__29pPd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"activeLink\":\"Navbar_activeLink__3etBE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"number\":\"counter_number__3TH36\",\"forfive\":\"counter_forfive__1dAkR\",\"ac\":\"counter_ac__3FoK1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toDoList\":\"ToDoList_toDoList__2PB_l\",\"active-filter\":\"ToDoList_active-filter__1JGSA\",\"is-done\":\"ToDoList_is-done__3VUte\",\"error\":\"ToDoList_error__EZ88M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"item\":\"Header_item__3IlmB\",\"gridContainer\":\"Header_gridContainer__3Bd07\",\"a\":\"Header_a__1Re6_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MainInfo_item__2HXZk\",\"container\":\"MainInfo_container__29xve\",\"centered\":\"MainInfo_centered__12BOe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"a\":\"Contacts_a__TLfP-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__pQ6IE\",\"post\":\"MyPosts_post__14H_U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3Pfp9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"works\":\"WorkExamples_works__3VTTk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ac\":\"Rating_ac__32mFP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ac\":\"Accordion_ac__1qDHp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MoreInformation_item__3wulB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"AboutMe_main__28Sd6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Music_item__2ushy\"};","import classes from './Contacts.module.css';\nconst Contacts = () => {\n    return (\n        <div style={{ gridArea: 'c'}}>\n            <div className={classes.a}>\n                Phone number\n        <a href=\"tel:=375(25)5413874\" >  +375(25) 541-38-74 </a>\n            </div>\n            <div className={classes.a}>\n                Mailing address \n            <a href=\"mailto:diana.lyah.96@mail.ru\" >  diana.lyah.96@mail.ru </a>\n            </div>\n        </div >\n    )\n}\nexport default Contacts;\n\n","import classes from './Header.module.css';\nimport Contacts from './Contacts/Contacts';\n\nconst Header = () => {\n    return (\n        <header className= {`${classes.header} ${classes.item} ${classes.gridContainer}`}>\n            <img style ={{gridArea: 'p'}} alt='Вставить картинку' src ='https://upload.wikimedia.org/wikipedia/commons/thumb/9/99/Unofficial_JavaScript_logo_2.svg/1200px-Unofficial_JavaScript_logo_2.svg.png'/>\n            <a href=\"mailto:diana.lyah.96@mail.ru\" className= {classes.a}> Invitation to Interview </a>\n            <Contacts />\n        </header>\n    )\n}\nexport default Header;","import React from 'react';\nimport classes from './Navbar.module.css';\nimport {NavLink} from 'react-router-dom';\nconst Navbar = () => {\n    return (\n        <nav className= {classes.nav}>\n            <div className= {classes.item}>\n                <NavLink to='/mainPage' activeClassName= {classes.activeLink}>Main page</NavLink>\n            </div>\n            <div className= {classes.item}>\n                <NavLink to= '/moreInformaition' activeClassName= {classes.activeLink}>More about me</NavLink>\n            </div>\n            <div className= {classes.item}>\n                <NavLink to= '/message' activeClassName= {classes.activeLink}>Message</NavLink>\n            </div>\n            <div className= {classes.item}>\n                <NavLink to='/music' activeClassName= {classes.activeLink}>Music for soul</NavLink>\n            </div>\n        </nav>\n    )\n}\nexport default Navbar;","import classes from './Post.module.css'\n\ntype PostType = {\n  message: string\n  likecount: number\n}\n\nconst Post: React.FC<PostType> = (props) => {\n\n  return (\n    <div className={classes.item}>\n      <div>\n        <img alt='Can not add' src='https://hi-news.ru/wp-content/uploads/2016/05/razum-750x521.jpg' />\n            {props.message}\n          </div>\n      <div>\n        <span>\n          {props.likecount} Likes\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default Post;","import classes from './MyPosts.module.css';\nimport Post from './OnePost/Post';\nimport React, { KeyboardEvent } from 'react';\nimport {MyPostType} from './MyPostConteiner';\n\n\nconst MyPosts: React.FC<MyPostType> = (props) => {\n\n  let postsElements = props.profilePage.postsData.map(p => <Post message={p.message} likecount={p.likecount} />);\n\n  let newPostElement = React.createRef<HTMLTextAreaElement>();\n\n  function onAddPost() {\n    props.addPost();\n  }\n  function deletePost() {\n    props.deletePost();\n  }\n  function onPostChange() {\n    if (newPostElement.current) {\n      let text = newPostElement.current.value;\n      props.postChange(text);\n    }\n  }\n  function onPressEnter(e: KeyboardEvent<HTMLTextAreaElement>) {\n    if (e.key === 'Enter') {\n      props.addPost();\n    }\n  }\n\n  return (\n    <div className={classes.item}>\n      <h3>My posts</h3>\n      <textarea ref={newPostElement} onChange={onPostChange} value={props.profilePage.newPostText} onKeyPress={onPressEnter} />\n      <div>\n        <button onClick={onAddPost}>Add motivation</button>\n      </div>\n      <div>\n        <button onClick={deletePost}>Remove</button>\n      </div>\n      <div className={classes.post}>\n        {postsElements}\n      </div>\n    </div>\n  )\n}\n\nexport default MyPosts;","import { AllActionsType, ADD_POST, UPDATE_NEW_POST_TEXT, DELETE_POSTS } from './store';\n\nexport type PostsType = {\n    id: number\n    message: string\n    likecount: number\n};\n\nexport type InitialProfilePageType = {\n    postsData: Array<PostsType>\n    newPostText: string\n};\n\nlet initialState = {\n    postsData: [\n        { id: 1, message: 'You see things and say ‘Why?’, but I dream things and say ‘Why not?’ George Bernard Shaw', likecount: 29 },\n        { id: 1, message: 'Success is going from failure to failure without losing your enthusiasm. Winston Churchill', likecount: 21 },\n        { id: 1, message: 'Genius is one percent inspiration, and ninety-nine percent perspiration. Thomas Edison', likecount: 25 },\n    ],\n    newPostText: '',\n}\n\nconst profileReduser = (state: InitialProfilePageType = initialState, action: AllActionsType): InitialProfilePageType => {\n    switch (action.type) {\n        case ADD_POST: {\n            let stateCopy = {...state}\n            stateCopy.postsData.push({ id: 1, message: state.newPostText, likecount: 0 });\n            stateCopy.newPostText = '';\n            return stateCopy;\n        }\n        case UPDATE_NEW_POST_TEXT: {\n            let stateCopy = {...state}\n            stateCopy.newPostText = action.newText;\n            return stateCopy;\n        }\n        case DELETE_POSTS: {\n            return {...state, postsData: []};\n        }\n        default:\n            return state;\n    }\n}\nexport default profileReduser;","import { AllActionsType, UPDATE_NEW_MESSAGE_TEXT, ADD_MESSAGE } from './store';\n\nexport type DialogsItemType = {\n    id: number\n    name: string\n    photo: string\n}\nexport type MessagesType = {\n    id: number\n    message: string\n}\nexport type InitialDialogsPageType = {\n    dialogs: Array<DialogsItemType>\n    messages: Array<MessagesType>\n    newMessageText: string\n}\nlet initialState = {\n    dialogs: [\n        { id: 1, name: 'IT-INCUBATOR', photo: 'https://yt3.ggpht.com/ytc/AKedOLTG4icr2chj7SuttAtEnnqP7KS20Xmc3CQcokQ0CQ=s900-c-k-c0x00ffffff-no-rj' },\n        { id: 2, name: 'Employer', photo: 'https://new-variant.ru/wp-content/uploads/2019/06/%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BE%D0%B4%D0%B0%D1%82%D0%B5%D0%BB%D1%8C.jpg' },\n        { id: 3, name: 'English courses', photo: 'https://www.slivki.by/znijki-media/w522_322/default/1009921/kursy-obuchenie-minsk-skidka-englishbel-1.jpg' },\n        { id: 4, name: 'Minsk Technical University', photo: 'https://upload.wikimedia.org/wikipedia/commons/9/94/Don_state_technical_university.JPG' }\n    ],\n    messages: [\n        { id: 3, message: 'Hi' },\n        { id: 3, message: 'How are you? How is the learning?' },\n        { id: 3, message: 'Do our courses help you?' }\n    ],\n    newMessageText: '',\n}\n\nconst dialogsReduser = (state: InitialDialogsPageType = initialState, action: AllActionsType): InitialDialogsPageType => {\n    switch (action.type) {\n        case UPDATE_NEW_MESSAGE_TEXT: {\n            let stateCopy = {...state}\n            stateCopy.newMessageText = action.newText;\n            return stateCopy;\n        }\n        case ADD_MESSAGE: {\n            let stateCopy = {...state};\n            stateCopy.messages = [...state.messages];\n            stateCopy.messages.push({ id: 3, message: state.newMessageText });\n            stateCopy.newMessageText = '';\n            return stateCopy;\n        }\n\n        default:\n            return state;\n    }\n}\nexport default dialogsReduser;","// @ts-nocheck\nimport profileReduser from './profileReduser';\nimport dialogsReduser from './dialogsReduser';\nexport const UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\nexport const ADD_MESSAGE = 'ADD-MESSAGE';\nexport const ADD_POST = 'ADD-POST';\nexport const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nexport const DELETE_POSTS = 'DELETE-POSTS';\n\nexport type PostsType = {\n    id: number\n    message: string\n    likecount: number\n};\nexport type DialogsItemType = {\n    id: number\n    name: string\n    photo: string\n};\nexport type MessagesType = {\n    message: string\n};\nexport type ProfilePageType = {\n    postsData: Array<PostsType>\n    newPostText: string\n};\nexport type DialogsPageType = {\n    dialogs: Array<DialogsItemType>\n    messages: Array<MessagesType>\n    newMessageText: string\n};\nexport type RootStateType = {\n    profilePage: ProfilePageType\n    dialogsPage: DialogsPageType\n};\n\n// type AddPostType = {\n//     type: ADD_POST\n// };                       //создание типов вручную\n// type UpdatePostType = {\n//     type: UPDATE_NEW_POST_TEXT\n//     newText: string\n// };\n// type UpdateMessageType = {\n//     type: UPDATE_NEW_MESSAGE_TEXT\n//     newText: string\n// };\n// type AddMessageType = {\n//     type: ADD_MESSAGE\n// };\n// export type AllActionsType = AddPostType | UpdatePostType | UpdateMessageType | AddMessageType\n\nexport type AllActionsType = AddPostActionType | OnPostChangeActionType | AddMessageActionType | OnMessageChangeActionType\n\nexport type StoreType = {\n    _state: RootStateType\n    getState: () => RootStateType\n    _callSubscriber: (state: RootStateType) => void\n    subscribe: (observer: (RootStateType) => void) => void\n    dispatch: (action: AllActionsType) => void\n};\ntype AddPostActionType = ReturnType<typeof addPostActionCreator>\ntype OnPostChangeActionType = ReturnType<typeof onPostChangeActionCreator>\ntype AddMessageActionType = ReturnType<typeof addMessageActionCreator>\ntype OnMessageChangeActionType = ReturnType<typeof onMessageChangeActionCreator>\ntype DeletePostActionCreatorType = ReturnType<typeof deletePostActionCreator>\n\nlet store: StoreType = {\n    _state: {\n        profilePage: {\n            postsData: [\n                { id: 1, message: 'You see things and say ‘Why?’, but I dream things and say ‘Why not?’ George Bernard Shaw', likecount: 29 },\n                { id: 1, message: 'Success is going from failure to failure without losing your enthusiasm. Winston Churchill', likecount: 21 },\n                { id: 1, message: 'Genius is one percent inspiration, and ninety-nine percent perspiration. Thomas Edison', likecount: 25 },\n            ],\n            newPostText: '',\n        },\n        dialogsPage: {\n            dialogs: [\n                { id: 1, name: 'IT-INCUBATOR', photo: 'https://yt3.ggpht.com/ytc/AKedOLTG4icr2chj7SuttAtEnnqP7KS20Xmc3CQcokQ0CQ=s900-c-k-c0x00ffffff-no-rj' },\n                { id: 2, name: 'Employer', photo: 'https://new-variant.ru/wp-content/uploads/2019/06/%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BE%D0%B4%D0%B0%D1%82%D0%B5%D0%BB%D1%8C.jpg' },\n                { id: 3, name: 'English courses', photo: 'https://www.slivki.by/znijki-media/w522_322/default/1009921/kursy-obuchenie-minsk-skidka-englishbel-1.jpg' },\n                { id: 4, name: 'Minsk Technical University', photo: 'https://upload.wikimedia.org/wikipedia/commons/9/94/Don_state_technical_university.JPG' }\n            ],\n            messages: [\n                { id: 3, message: 'Hi' },\n                { id: 3, message: 'How are you? How is the learning?' },\n                { id: 3, message: 'Do our courses help you?' }\n            ],\n            newMessageText: '',\n        },\n    },\n    _callSubscriber(state: RootStateType) {\n        console.log('State changed');\n    },\n\n    getState() {\n        return this._state;\n    },\n    subscribe(observer) {\n        this._callSubscriber = observer; //наблюдатель observer  \n    },\n\n    dispatch(action: AllActionsType) {\n        this._state.profilePage = profileReduser(this._state.profilePage, action);\n        this._state.dialogsPage = dialogsReduser(this._state.dialogsPage, action);\n        this._callSubscriber(this._state);\n    }\n};\nexport let addPostActionCreator = (): AddPostActionType => ({ type: ADD_POST });\nexport let onPostChangeActionCreator = (text: string): OnPostChangeActionType => ({ type: UPDATE_NEW_POST_TEXT, newText: text } as const)\nexport let addMessageActionCreator = (): AddMessageActionType => ({ type: ADD_MESSAGE });\nexport let onMessageChangeActionCreator = (text: string): OnMessageChangeActionType => ({ type: UPDATE_NEW_MESSAGE_TEXT, newText: text } as const)\nexport let deletePostActionCreator = (): DeletePostActionCreatorType => ({type: DELETE_POSTS});\nexport default store;","import MyPosts from './MyPosts';\nimport { addPostActionCreator, onPostChangeActionCreator, deletePostActionCreator } from '../../../redux/store';\nimport { connect } from 'react-redux';\nimport { AppStateType } from '../../../redux/reduxStore';\nimport { InitialProfilePageType } from '../../../redux/profileReduser'\nimport { Dispatch } from 'redux';\n\ntype MapToStatePropsType = {\n    profilePage: InitialProfilePageType\n}\n\ntype MapToDispatchPropsType = {\n    postChange: (text: string) => void\n    addPost: () => void\n    deletePost: () => void\n\n}\nexport type MyPostType = MapToDispatchPropsType & MapToStatePropsType;\n\nlet mapToStateProps = (state: AppStateType): MapToStatePropsType => {\n    return {\n        profilePage: state.profilePage\n    }\n}\nlet mapToDispatchProps = (dispatch: Dispatch): MapToDispatchPropsType => {\n    return {\n        postChange: (text: string) => {\n            dispatch(onPostChangeActionCreator(text));\n        },\n        addPost: () => {\n            dispatch(addPostActionCreator());\n        },\n        deletePost: () => {\n            dispatch(deletePostActionCreator());\n        },\n    }\n}\nconst MyPostsContainer = connect(mapToStateProps, mapToDispatchProps)(MyPosts);\nexport default MyPostsContainer;\n\n\n// const MyPostsContainer: React.FC<MyPostsPropsContainerType> = (props) => {\n\n//     let state = props.store.getState();\n//     function addPost() {\n//         props.store.dispatch(addPostActionCreator());\n//     }\n//     function postChange(text: string) {\n//         props.store.dispatch(onPostChangeActionCreator(text));\n//     }\n\n//     return (\n//         <MyPosts profilePage={state.profilePage} postChange={postChange} addPost={addPost} />\n//     )\n// }","import classes from './MainInfo.module.css'\n\n\nconst MainInfo = () => {\n  return (\n    <div className={classes.container}>\n      <img alt='Вставить картинку' src='https://nanosemantics.ai/wp-content/uploads/2019/12/%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5-%D0%B4%D0%BB%D1%8F-%D0%B4%D0%B5%D1%82%D0%B5%D0%B9-1024x683.jpg' />\n      <div className={`${classes.item} ${classes.centered}`}>\n        I like to learn, I like to write code and see the result of my work.\n        <div>\n          I am the frontend specialist that you are looking for!\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default MainInfo;","import MyPostsContainer from './MyPosts/MyPostConteiner';\nimport MainInfo from './MainInfo/MainInfo';\n\nconst MainContent = () => {\n  return (\n    <div>\n      <MainInfo />\n      <MyPostsContainer />\n    </div>\n  )\n}\n\nexport default MainContent;\n\n// export type MyPostsPropsType = {\n//   store: StoreType\n// }\n// : React.FC<MyPostsPropsType>","import React, { ChangeEvent, KeyboardEvent } from 'react';\nimport classes from './ToDoList.module.css';\nimport { TaskType, FilterValuesType } from './ToDoList';\nimport { useState } from 'react';\n\ntype ContainerTodoListPropsType = {\n    title: string,\n    tasks: Array<TaskType>\n    filter: FilterValuesType\n    removeTask: (taskID: string) => void\n    changeFilter: (filter: FilterValuesType) => void\n    addTask: (title: string) => void\n    changeTaskStatus: (taskID: string, isDone: boolean) => void\n}\n\nconst ContainerTodoList: React.FC<ContainerTodoListPropsType> = (props) => {\n    const tasksJSXelements = props.tasks.map(t => {\n        return (\n            <li className={`${t.isDone === true ? 'is-done' : ''} ${classes.customcCheckbox}`} key={t.id}>\n                <input\n\n                    type=\"checkbox\"\n                    onChange={(e) => props.changeTaskStatus(t.id, e.currentTarget.checked)}\n                    checked={t.isDone}\n                    value={t.title}\n                />\n                <span>{t.title}</span>\n                <button onClick={() => props.removeTask(t.id)}>X</button>\n            </li>\n        )\n    })\n\n    const [newTaskTitle, setNewTaskTitle] = useState<string>('');\n    const [error, setError] = useState<boolean>(false);\n\n    const addTask = () => {\n        const trimmedTitle = newTaskTitle.trim();\n        if (trimmedTitle) {\n            props.addTask(trimmedTitle);\n            setNewTaskTitle('');\n        } else {\n            setError(true);\n        }\n        setNewTaskTitle('');\n    }\n    const onNewTitleChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\n        setError(false);\n        setNewTaskTitle(event.currentTarget.value)\n    };\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.ctrlKey || e.key === 'Enter') {\n            addTask();\n        }\n    };\n    const setAll = () => props.changeFilter('all');\n    const setActive = () => props.changeFilter('active');\n    const setCompleted = () => props.changeFilter('completed');\n    const classForAll = props.filter === 'all' ? 'active-filter' : '';\n    const classForActive = props.filter === 'active' ? 'active-filter' : '';\n    const classForCompleted = props.filter === 'completed' ? 'active-filter' : '';\n    const errorMessage = error ? <div style={{ backgroundColor: 'red', color: 'white', fontWeight: 900, textAlign: 'center' }}>Title is required</div> : '';\n    return (\n        <div className={classes.toDoList}>\n            <div>\n                <h3>{props.title}</h3>\n            </div>\n            <input\n                className={error ? 'error' : ''}\n                onChange={onNewTitleChangeHandler}\n                value={newTaskTitle}\n                onKeyPress={onKeyPressHandler}\n                placeholder=\"Write something\"\n            />\n            {errorMessage}\n            <button onClick={addTask}>+</button>\n            <ul>\n                {tasksJSXelements}\n            </ul>\n            <div>\n                <button\n                    className={classForAll}\n                    onClick={setAll}>All</button>\n                <button\n                    className={classForActive}\n                    onClick={setActive}>Active</button>\n                <button\n                    className={classForCompleted}\n                    onClick={setCompleted}>Completed</button>\n            </div>\n        </div>\n    )\n}\nexport default ContainerTodoList;","import classes from './ToDoList.module.css';\nimport ContainerTodoList from './ContainerForToDoList'\nimport { v1 } from 'uuid';\nimport React, { useState } from 'react';\n\nexport type TaskType = {\n    id: string,\n    title: string,\n    isDone: boolean,\n}\nexport type FilterValuesType = 'all' | 'active' | 'completed'\n\nconst ToDoList = () => {\n    let [tasks, setTasks] = useState<Array<TaskType>>([\n        { id: v1(), title: 'HTML', isDone: true },\n        { id: v1(), title: 'CSS', isDone: true },\n        { id: v1(), title: 'React', isDone: true },\n        { id: v1(), title: 'Redux', isDone: true },\n    ])\n\n    let [filter, setFilter] = useState<FilterValuesType>('all')\n\n    const removeTask = (taskID: string) => {\n        setTasks(tasks.filter(t => t.id !== taskID));\n    };\n\n    const addTask = (title: string) => {\n        const newTask: TaskType = {\n            id: v1(),\n            title, // title: title,\n            isDone: false,\n        }\n        setTasks([newTask, ...tasks]);\n    }\n    const changeTaskStatus = (taskID: string, isDone: boolean) => {\n        setTasks(tasks.map(t => t.id === taskID ? { ...t, isDone } : t)); //isDone = isDone:isDone\n    }\n\n    let tasksForRender: Array<TaskType> = tasks;\n    if (filter === 'active') {\n        tasksForRender = tasks.filter(t => t.isDone === false)\n    } else if (filter === 'completed') {\n        tasksForRender = tasks.filter(t => t.isDone === true)\n    }\n    return (\n        <div className={classes.works}>\n            <ContainerTodoList title={'I learned:'} tasks={tasksForRender} filter={filter} removeTask={removeTask} changeFilter={setFilter} addTask={addTask} changeTaskStatus={changeTaskStatus} />\n        </div>\n    )\n}\nexport default ToDoList;","type NumberType = {\n    number: number\n    setNumber: (number: number) => void\n    maxValue: number\n    minValue: number\n    classNameForNumber: string\n}\n\nconst Number: React.FC<NumberType> = ({ number, setNumber, maxValue, minValue, classNameForNumber }) => {\n\n    return (\n        <div style={number !== maxValue ? { backgroundColor: '#E6E6FA' } : { backgroundColor: '#D8BFD8' }}>\n            <div className={classNameForNumber}>{number}</div>\n        </div>\n    )\n}\nexport default Number;","import s from './counter.module.css'\ntype CounterType = {\n    incButton: () => void\n    resetButton: () => void\n    disabledForReset: boolean\n    disabledForInc: boolean\n}\n\nconst Buttons: React.FC<CounterType> = ({ incButton, resetButton, disabledForInc, disabledForReset }) => {\n\n    return (\n        <span >\n            <button className={s.button} onClick={incButton} disabled={disabledForInc}>inc</button>\n            <button className={s.button} onClick={resetButton} disabled={disabledForReset}>reset</button>\n        </span>\n    )\n}\nexport default Buttons;","import React from 'react';\nimport { useState } from 'react';\nimport Number from './Number';\nimport Buttons from './Buttons'\nimport s from './counter.module.css';\n\nconst Counter = () => {\n    let [number, setNumber] = useState<number>(0);\n\n    let maxValue = 5;\n    let minValue = 0;\n\n    let incButton = () => {\n        if (number < maxValue) {\n            setNumber(number + 1);\n        }\n    }\n    let resetButton = () => setNumber(0);\n\n    let classNameForNumber = (number !== maxValue ? `${s.number}` : `${s.number} ${s.forfive}`);\n\n    let disabledForInc = (number === maxValue);\n    let disabledForReset = (number === minValue);\n    return (\n        <div className={s.ac}>\n            <Number number={number} setNumber={setNumber} maxValue={maxValue} minValue={minValue} classNameForNumber={classNameForNumber} />\n            <Buttons incButton={incButton} resetButton={resetButton} disabledForInc={disabledForInc} disabledForReset={disabledForReset} />\n        </div>\n    )\n}\nexport default Counter;","import classes from './Rating.module.css';\nimport { useState } from 'react';\ntype StarPropsType = {\n    selected: boolean;\n    onClick: () => void;\n};\ntype RatingType = {\n    value: number\n    maxValue: number\n};\n\nfunction Star({ selected, onClick }: StarPropsType) {\n    return <span onClick={onClick} style={{ cursor: 'pointer' }}>{selected ? '\\u2605' : '\\u2606'}</span>;\n}\n\nexport default function Rating(props: RatingType) {\n    const [rating, setRating] = useState(props.value);\n\n    return (\n        <div className={classes.ac}>\n            You can change rating\n            <div>\n            {Array(props.maxValue).fill(null).map((_, i) => <Star selected={i < rating} onClick={() => setRating(i + 1)} />)}\n            </div>\n        </div>\n    );\n}","import classes from './Accordion.module.css'\nimport React from 'react';\nimport { useState } from 'react';\n\ntype PropsType2 = {\n    title: string,\n}\nfunction AccordionTitle(props: PropsType2) {\n    return (\n        <h2>\n            {props.title}\n        </h2>\n    )\n}\nfunction AccordionBody() {\n    return (\n        <ul>\n            <h4>Three steps to success</h4>\n            <li>1. Choose for yourself one area in which you want to develop and achieve excellent results.</li>\n            <li>2. You must be surrounded by people who are engaged in this business.</li>\n            <li>3. Daily practice. Daily hard work is the key to success. </li>\n        </ul>\n    );\n}\ntype PropsType = {\n    titleValue: string\n}\n\nexport default function Accordion(props: PropsType) {\n    const [collapsed, setCollapsed] = useState(true);\n\n    return (\n        <div className={classes.ac} style= {(collapsed ? {height: '300px'} : {height: '500px'})}>\n            <AccordionTitle title={props.titleValue} />\n            <button onClick={() => setCollapsed(!collapsed)}>{collapsed ? 'Show' : 'Collapse'}</button>\n            {!collapsed && <AccordionBody />}\n        </div>\n    );\n}","import { useState } from 'react';\n\nexport default function OnOff() {\n\n    let [on, setOn] = useState(false);\n\n    const onStyle = {\n        width: '30px',\n        height: '20px',\n        border: '1px solid black',\n        display: 'inline-block',\n        padding: '2px',\n        backgroundColor: on ? 'green' : 'white'\n    };\n    const offStyle = {\n        width: '30px',\n        height: '20px',\n        border: '1px solid black',\n        display: 'inline-block',\n        marginLeft: '2px',\n        padding: '2px',\n        backgroundColor: on ? 'white' : 'red',\n    };\n    const indicatorStyle = {\n        width: '30px',\n        height: '30px',\n        borderRadius: '15px',\n        border: '1px solid black',\n        display: 'inline-block',\n        marginLeft: '10px',\n        backgroundColor: on ? 'green' : 'red',\n    };\n    const mainStyle = {\n        border: '1px solid gray',\n        height: '70px',\n        borderRadius: '25px',\n        padding: '12px',\n    };\n\n    return <div style={mainStyle}>\n        <div style={onStyle} onClick={() => setOn(true)}>On</div>\n        <div style={offStyle} onClick={() => setOn(false)}>Off</div>\n        <div style={indicatorStyle}> </div>\n    </div>\n\n}","import classes from './WorkExamples.module.css';\nimport ToDoList from './ToDoList/ToDoList';\nimport Counter from './Counter/Counter';\nimport Rating from './Rating/Rating';\nimport Accordion from './Accordion/Accordion';\nimport OnOff from './OnOff/OnOff';\n\n\nconst WorkExamples = () => {\n\n    return (\n        <div className={classes.works}>\n            <ToDoList />\n            <Counter />\n            <OnOff />\n            <Accordion titleValue=\"If you want to see something interesting, then click on me\" />\n            <Rating value={3} maxValue={5} />\n        </div>\n    )\n}\nexport default WorkExamples;","import classes from './AboutMe.module.css'\nconst AboutMe = () => {\n    return (\n        <div className={classes.maim}>\n            <div style={{ padding: '20px' }}>I mastered it on my own native js at <a href='https://learn.javascript.ru/'>https://learn.javascript.ru/</a></div>\n            <div style={{ paddingLeft: '20px' }}><b>Completed projects:</b></div>\n            <div style={{ paddingLeft: '20px' }}>\n                <div style={{ paddingLeft: '10px' }}> <b>A</b> single-page application in React with TypeScript connection (props, typing), Redux, which includes the use of hooks: useState (filter, conditional rendering), useEffect.</div>\n                <div style={{ paddingLeft: '10px' }}> <b>T</b>o do List, Counter, Accordin, Rating.</div>\n                <div style={{ paddingLeft: '10px' }}> <b>W</b>riting unit tests for your applications.</div>\n            </div>\n            <div style={{ padding: '20px' }}>GitHub link: <a href='https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/'>https://github.com/Diana-ctrl</a></div>\n            <div style={{ padding: '20px' }}>\n                <div>Links to completed tasks: </div>\n                <div>\n                    <a href='https://leetcode.com/Diana_Lyah/'>https://leetcode.com/Diana_Lyah/</a>\n                </div>\n                <div>\n                    <a href='https://www.codewars.com/users/Diana-ctrl'>https://www.codewars.com/users/Diana-ctrl</a>\n                </div>\n                <div>\n                    <a href='https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/'>https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/</a>\n                </div>\n            </div>\n            <div style={{ padding: '20px' }}>\n                <div>2021</div>\n                Programming courses in <a href='https://it-incubator.by/'>IT-INCUBATOR</a>\n                <div>Front-end development</div>\n                <div>2020</div>\n                <a href='https://abitur.bsuir.by/programmnoe-obespechenie-informatsionnykh-tekhnologiy'>Belarusian State University of Informatics and Radioelectronics</a>\n                <div>Incomplete distance education, Information technology software</div>\n                <div>2019</div>\n                <a href='https://skyengschool.com/'>Skyeng: Online English School</a>\n                <div>General English, Pre-Intermediate</div>\n                <div>2018</div>\n                <a href='https://by.belstu.by/'>Belarusian State Technological University</a>\n                <div>Organic Technology, Certification Specialist</div>\n            </div>\n        </div >\n    )\n\n}\nexport default AboutMe;","import React from 'react';\nimport classes from './MoreInformation.module.css';\nimport AboutMe from './AboutMe'\n\nconst MoreInformation = () => {\n    return (\n        <div className={classes.item}>\n            <AboutMe />\n        </div>\n    )\n}\nexport default MoreInformation;","import classes from './Music.module.css';\n\nconst Music = () => {\n    return (\n        <div className= {classes.item}>\n            Music for soul\n        </div>\n    )\n}\nexport default Music;","import { NavLink } from 'react-router-dom';\nimport { DialogsItemType } from '../../../redux/store';\nimport classes from '../Dialogs.module.css';\n\nconst DialogItem: React.FC<DialogsItemType> = (props) => {\n    return (\n        <div className={classes.dialogs + ' ' + classes.active + ' ' + classes.item}>\n            <img src={props.photo} alt='Can not add' />\n            <NavLink to={'/dialogs/' + props.id} activeClassName={classes.activeLink}>{props.name}</NavLink>\n        </div>\n    )\n}\n\nexport default DialogItem;","import classes from '../Dialogs.module.css';\n\ntype MessagesType = {\n    message: string\n}\nconst Messages: React.FC<MessagesType> = (props) => {\n    return (\n        <div>\n        <div className={classes.massage}>{props.message}</div>\n      </div>\n    )\n}\n\nexport default Messages;","import classes from './Dialogs.module.css';\nimport DialogItem from './DialogsItem/DialogItem';\nimport Messages from './MessagesItem/MessagesItem';\nimport React, { KeyboardEvent } from 'react';\nimport { DialogsType } from './DialogsContainer';\n\nconst Dialogs: React.FC<DialogsType> = (props) => {\n\n    let dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem id={d.id} name={d.name} photo={d.photo} />);\n    let messagesElements = props.dialogsPage.messages.map(m => <Messages message={m.message} />);\n\n    let newMessegeElement = React.createRef<HTMLTextAreaElement>();\n\n    function onAddMessage() {\n        props.addMessage();\n    }\n\n    function onMessageChange() {\n        if (newMessegeElement.current) {\n            props.messageChange(newMessegeElement.current.value);\n        }\n    }\n\n    function onPressEnter(e: KeyboardEvent<HTMLTextAreaElement>) {\n        if (e.key === 'Enter') {\n            props.addMessage();\n        }\n    }\n\n    return (\n        <div className={classes.dialogs}>\n            <div className={classes.dialogsItems}>\n                {dialogsElements}\n            </div>\n\n            <div className={classes.messages}>\n                {messagesElements}\n                <textarea ref={newMessegeElement} onChange={onMessageChange} value={props.dialogsPage.newMessageText} onKeyPress={onPressEnter}></textarea>\n                <button onClick={onAddMessage}>Add message</button>\n            </div>\n\n\n        </div>\n    )\n}\nexport default Dialogs;","import Dialogs from './Dialogs';\nimport { onMessageChangeActionCreator, addMessageActionCreator } from '../../redux/store'\nimport { InitialDialogsPageType } from '../../redux/dialogsReduser';\nimport { connect } from 'react-redux';\nimport { AppStateType } from '../../redux/reduxStore';\nimport { Dispatch } from 'redux';\n\ntype MapStatePropsType = {\n    dialogsPage: InitialDialogsPageType\n}\n\ntype MapDispatchToProps = {\n    addMessage: () => void\n    messageChange: (text: string) => void\n}\nexport type DialogsType = MapStatePropsType & MapDispatchToProps;\n\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        dialogsPage: state.dialogsPage,\n    }\n}\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchToProps => {\n    return {\n        addMessage: () => {\n            dispatch(addMessageActionCreator());\n        },\n        messageChange: (text: string) => {\n            dispatch(onMessageChangeActionCreator(text));\n        }\n    }\n}\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs); // connect() - первым вызовом функции настрашиваем контейнерную компоненту\n// она создает контейнерную компоненту, внутри контейнерной компоненты она рендарит призентационную компоненту и внутрь призентационной компоненты в качестве пропсов(атрибутов) передает свойства, которые  'сидят в объектах из первого вызова функции'\nexport default DialogsContainer;\n\n\n//     // store => 3 methods => dispatch(), getState(), subscriber()\n//     // getState() what return => state with two keys\n//     // props.store = {\n//     // getState: () => {\n//     //  _state: {\n// //        dialogsPage:\n//  //       profilePage\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header'\nimport Navbar from './components/Navbar/Navbar';\nimport MainContent from './components/MainContent/MainContent';\nimport WorkExamples from './components/Work examples/WorkExamples';\nimport MoreInformation from './components/MoreInformation/MoreInformation';\nimport Music from './components/Music/Music';\nimport { Route } from 'react-router-dom';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\n\n\nfunction App() {\n  return (\n    <div className='app-wrapper'>\n      <Header />\n      <Navbar />\n      <div className='app-wrapper-content'>\n        <Route path={'/mainPage'} render={() => <MainContent />} />\n        <Route path={'/moreInformaition'} render={() => <MoreInformation />} />\n        <Route exact path={'/message'} render={() => <DialogsContainer />} />\n        <Route path={'/music'} render={() => <Music />} />\n        <Route path={'*'} render={() => <div>404 not found</div>} />\n      </div>\n      <WorkExamples />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers, createStore } from 'redux';\nimport dialogsReduser from './dialogsReduser';\nimport profileReduser from './profileReduser';\n\nexport type StoreType = typeof store;\nexport type AppStateType = ReturnType<typeof rootReduser>;\n\nlet rootReduser = combineReducers({\n    profilePage: profileReduser,\n    dialogsPage: dialogsReduser,\n});\n\nlet store = createStore(rootReduser);\n\nexport default store;\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/reduxStore'\n\nReactDOM.render(\n  <BrowserRouter basename={'/resume'}>\n    <React.StrictMode>\n      <Provider store= {store}>\n        <App />\n        </Provider>\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}