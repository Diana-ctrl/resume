{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Work examples/Counter/counter.module.css","components/Work examples/ToDoList/ToDoList.module.css","components/Header/Header.module.css","components/MainContent/MainInfo/MainInfo.module.css","components/Header/Contacts/Contacts.module.css","components/Users/Users.module.css","components/MainContent/MyPosts/MyPosts.module.css","components/MainContent/MyPosts/OnePost/Post.module.css","components/Work examples/WorkExamples.module.css","components/Work examples/Rating/Rating.module.css","components/Work examples/Accordion/Accordion.module.css","components/MoreInformation/MoreInformation.module.css","components/MoreInformation/AboutMe.module.css","components/Music/Music.module.css","components/Header/Contacts/Contacts.tsx","components/Header/Header.tsx","components/Navbar/Navbar.tsx","redux/usersReducer.tsx","accets/images/man.png","components/Users/Users.tsx","accets/images/loaderGif.svg","components/common/preloader/Preloader.tsx","components/Users/UsersConteiner.tsx","components/MainContent/MyPosts/OnePost/Post.tsx","components/MainContent/MyPosts/MyPosts.tsx","redux/profileReducer.tsx","components/MainContent/MyPosts/MyPostConteiner.tsx","components/MainContent/MainInfo/MainInfo.tsx","components/MainContent/MainContent.tsx","components/MainContent/MainContentContainer.tsx","components/Work examples/ToDoList/ContainerForToDoList.tsx","components/Work examples/ToDoList/ToDoList.tsx","components/Work examples/Counter/Number.tsx","components/Work examples/Counter/Buttons.tsx","components/Work examples/Counter/Counter.tsx","components/Work examples/Rating/Rating.tsx","components/Work examples/Accordion/Accordion.tsx","components/Work examples/OnOff/OnOff.tsx","components/Work examples/WorkExamples.tsx","components/MoreInformation/AboutMe.tsx","components/MoreInformation/MoreInformation.tsx","components/Music/Music.tsx","components/Dialogs/DialogsItem/DialogItem.tsx","components/Dialogs/MessagesItem/MessagesItem.tsx","components/Dialogs/Dialogs.tsx","redux/dialogsReducer.tsx","components/Dialogs/DialogsContainer.tsx","App.tsx","redux/reduxStore.tsx","index.tsx"],"names":["module","exports","Contacts","style","gridArea","className","classes","a","href","Header","header","item","gridContainer","alt","src","Navbar","nav","to","activeClassName","activeLink","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","UsersReduser","state","action","type","newFollow","map","t","id","userId","followed","Users","props","pages","Array","fill","_","i","number","onClick","onPageChanged","selectedPage","usersPage","user","photos","small","photoMan","name","unfollowed","status","Preloader","loaderGif","UsersAPIComponent","setCurrentPage","setToggleIsFetchig","axios","get","then","response","setUsers","data","items","this","setTotalUsersCount","totalCount","React","Component","UsersContainer","connect","Post","message","likecount","MyPosts","postsElements","profilePage","postsData","p","newPostElement","createRef","ref","onChange","current","text","value","postChange","newPostText","onKeyPress","e","key","addPost","deletePost","post","ADD_POST","UPDATE_NEW_POST_TEXT","DELETE_POSTS","SET_USER_PROFILE","v1","profile","profileReduser","newText","MyPostsContainer","dispatch","onPostChangeActionCreator","MainInfo","container","centered","large","fullName","aboutMe","contacts","github","instagram","MainContent","MainContentContainer","match","params","userID","setUserProfile","whithURLDataContainerComponent","withRouter","ContainerTodoList","tasksJSXelements","tasks","isDone","customcCheckbox","changeTaskStatus","currentTarget","checked","title","removeTask","useState","newTaskTitle","setNewTaskTitle","error","setError","addTask","trimmedTitle","trim","classForAll","filter","classForActive","classForCompleted","errorMessage","backgroundColor","color","fontWeight","textAlign","toDoList","event","ctrlKey","placeholder","changeFilter","ToDoList","setTasks","setFilter","tasksForRender","works","taskID","newTask","Number","maxValue","setNumber","classNameForNumber","minValue","Buttons","incButton","resetButton","disabledForInc","disabledForReset","s","button","disabled","Counter","forfive","ac","Star","selected","cursor","Rating","rating","setRating","AccordionTitle","AccordionBody","Accordion","collapsed","setCollapsed","height","titleValue","OnOff","on","setOn","onStyle","width","border","display","padding","offStyle","marginLeft","indicatorStyle","borderRadius","WorkExamples","AboutMe","maim","paddingLeft","MoreInformation","Music","DialogItem","dialogs","active","photo","Messages","massage","Dialogs","dialogsElements","dialogsPage","d","messagesElements","messages","m","newMessegeElement","dialogsItems","messageChange","newMessageText","addMessage","UPDATE_NEW_MESSAGE_TEXT","ADD_MESSAGE","dialogsReduser","DialogsContainer","onMessageChangeActionCreator","App","useLocation","pathname","path","render","exact","rootReducer","combineReducers","profileReducer","dialogsReducer","usersReducer","store","createStore","ReactDOM","basename","StrictMode","document","getElementById"],"mappings":"4GACAA,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,WAAa,6B,mBCArFD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,WAAa,4BAA4B,SAAW,0BAA0B,KAAO,wB,mBCAvLD,EAAOC,QAAU,CAAC,OAAS,wBAAwB,QAAU,yBAAyB,GAAK,sB,mBCA3FD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,gBAAgB,gCAAgC,UAAU,0BAA0B,MAAQ,0B,mBCApJD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,cAAgB,8BAA8B,EAAI,oB,mBCAhID,EAAOC,QAAU,CAAC,KAAO,uBAAuB,UAAY,4BAA4B,SAAW,6B,mBCAnGD,EAAOC,QAAU,CAAC,EAAI,sB,mBCAtBD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,aAAe,8B,mBCA5DD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,KAAO,wB,mBCAtDD,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,MAAQ,8B,mBCA1BD,EAAOC,QAAU,CAAC,GAAK,qB,mBCAvBD,EAAOC,QAAU,CAAC,GAAK,wB,mBCAvBD,EAAOC,QAAU,CAAC,KAAO,gC,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,sB,6KCcVC,EAdE,WACb,OACI,sBAAKC,MAAO,CAAEC,SAAU,KAAxB,UACI,sBAAKC,UAAWC,IAAQC,EAAxB,yBAEJ,mBAAGC,KAAK,sBAAR,sCAEI,sBAAKH,UAAWC,IAAQC,EAAxB,4BAEA,mBAAGC,KAAK,+BAAR,6CCEGC,EATA,WACX,OACI,yBAAQJ,UAAS,UAAMC,IAAQI,OAAd,YAAwBJ,IAAQK,KAAhC,YAAwCL,IAAQM,eAAjE,UACI,qBAAKT,MAAQ,CAACC,SAAU,KAAMS,IAAI,oGAAoBC,IAAK,2IAC3D,mBAAGN,KAAK,+BAA+BH,UAAYC,IAAQC,EAA3D,uCACA,cAAC,EAAD,Q,wBCiBGQ,EAtBA,WACX,OACI,sBAAKV,UAAYC,IAAQU,IAAzB,UACI,qBAAKX,UAAYC,IAAQK,KAAzB,SACI,cAAC,IAAD,CAASM,GAAG,YAAYC,gBAAkBZ,IAAQa,WAAlD,yBAEJ,qBAAKd,UAAYC,IAAQK,KAAzB,SACI,cAAC,IAAD,CAASM,GAAI,oBAAoBC,gBAAkBZ,IAAQa,WAA3D,6BAEJ,qBAAKd,UAAYC,IAAQK,KAAzB,SACI,cAAC,IAAD,CAASM,GAAI,WAAWC,gBAAkBZ,IAAQa,WAAlD,uBAEJ,qBAAKd,UAAYC,IAAQK,KAAzB,SACI,cAAC,IAAD,CAASM,GAAG,SAASC,gBAAkBZ,IAAQa,WAA/C,8BAEJ,qBAAKd,UAAYC,IAAQK,KAAzB,SACI,cAAC,IAAD,CAASM,GAAG,SAASC,gBAAkBZ,IAAQa,WAA/C,2B,uCCSHC,EAAS,SACTC,EAAW,WACXC,EAAY,YACZC,EAAmB,mBACnBC,EAAwB,wBACxBC,EAAqB,qBAiB9BC,EAAe,CACfC,MAAO,GACPC,SAAU,EACVC,gBAAiB,EACjBC,YAAa,EACbC,YAAY,GA6BDC,EA1BM,WAA+F,IAA9FC,EAA6F,uDAA/DP,EAAcQ,EAAiD,uCAC/G,OAAQA,EAAOC,MACX,KAAKf,EACD,IAAIgB,EAAYH,EAAMN,MAAMU,KAAI,SAAAC,GAAC,OAAIA,EAAEC,KAAOL,EAAOM,OAAhB,2BAA8BF,GAA9B,IAAiCG,UAAU,IAAUH,KAC1F,OAAO,2BAAKL,GAAZ,IAAmBN,MAAOS,IAE9B,KAAKf,EACD,IAAIe,EAAYH,EAAMN,MAAMU,KAAI,SAAAC,GAAC,OAAIA,EAAEC,KAAOL,EAAOM,OAAhB,2BAA8BF,GAA9B,IAAiCG,UAAU,IAASH,KACzF,OAAO,2BAAKL,GAAZ,IAAmBN,MAAOS,IAE9B,KAAKd,EACD,OAAO,2BAAKW,GAAZ,IAAmBN,MAAOO,EAAOP,QAErC,KAAKJ,EACD,OAAO,2BAAKU,GAAZ,IAAmBH,YAAaI,EAAOJ,cAE3C,KAAKN,EACD,OAAO,2BAAKS,GAAZ,IAAmBJ,gBAAiBK,EAAOL,kBAE/C,KAAKJ,EACD,OAAO,2BAAKQ,GAAZ,IAAmBF,WAAYG,EAAOH,aAE1C,QACI,OAAOE,I,0CCjFJ,MAA0B,gCC8C1BS,EA/BD,SAACC,GAEX,IAAIC,EAAQC,MAAM,IAAIC,KAAK,GAAGT,KAAI,SAACU,EAAGC,GAAJ,OAAUA,EAAI,KAIhD,OACI,sBAAK3C,UAAWC,IAAQK,KAAxB,UACI,8BACKiC,EAAMP,KAAI,SAAAY,GAAM,OAAI,uBAAMC,QAAS,WAAQP,EAAMQ,cAAcF,IAAW5C,UAAWsC,EAAMb,cAAgBmB,EAAS3C,IAAQ8C,aAAe,GAAvH,cAA6HH,EAA7H,YAExBN,EAAMU,UAAUhB,KAAI,SAAAiB,GAAI,OACrB,gCACI,8BACI,cAAC,IAAD,CAASrC,GAAI,aAAeqC,EAAKf,GAAjC,SACI,qBAAKzB,IAAKwC,EAAKC,OAAOC,MAAQF,EAAKC,OAAOC,MAAQC,EAAU5C,IAAI,YAGvEyC,EAAKI,KACLJ,EAAKb,SACF,wBAAQS,QAAS,kBAAMP,EAAMF,SAASa,EAAKf,KAA3C,sBACA,wBAAQW,QAAS,kBAAMP,EAAMgB,WAAWL,EAAKf,KAA7C,oBACJ,8BAAMe,EAAKM,SACX,8BAAM,0BACN,8BAAM,yBAZAN,EAAKf,WC3BhB,MAA0B,sCCK1BsB,EAHG,WACd,OAAO,8BAAK,qBAAK/C,IAAKgD,EAAWjD,IAAI,cCuCnCkD,E,4MAWFZ,cAAgB,SAACF,GACb,EAAKN,MAAMqB,eAAef,GAC1B,EAAKN,MAAMsB,oBAAmB,GAC9BC,IAAMC,IAAN,kEAAqElB,EAArE,kBAAqF,EAAKN,MAAMf,WAC3FwC,MAAK,SAAAC,GACF,EAAK1B,MAAMsB,oBAAmB,GAC9B,EAAKtB,MAAM2B,SAASD,EAASE,KAAKC,W,uDAf9C,WAAqB,IAAD,OAChBC,KAAK9B,MAAMsB,oBAAmB,GAC9BC,IAAMC,IAAN,kEAAqEM,KAAK9B,MAAMb,YAAhF,kBAAqG2C,KAAK9B,MAAMf,WAC3GwC,MAAK,SAAAC,GACF,EAAK1B,MAAMsB,oBAAmB,GAC9B,EAAKtB,MAAM2B,SAASD,EAASE,KAAKC,OAClC,EAAK7B,MAAM+B,mBAAmBL,EAASE,KAAKI,iB,oBAaxD,WACI,OAAO,qCAAGF,KAAK9B,MAAMZ,WAAa,cAAC,EAAD,IAAgB,KAC9C,cAAC,EAAD,CAAOF,gBAAiB4C,KAAK9B,MAAMd,gBAAiBD,SAAU6C,KAAK9B,MAAMf,SACrEE,YAAa2C,KAAK9B,MAAMb,YAAauB,UAAWoB,KAAK9B,MAAMU,UAC3DZ,SAAUgC,KAAK9B,MAAMF,SAAUkB,WAAYc,KAAK9B,MAAMgB,WAAYR,cAAesB,KAAKtB,uB,GAzBtEyB,IAAMC,WAsEvBC,EARQC,aAhCD,SAAC9C,GACnB,MAAO,CACHoB,UAAWpB,EAAMoB,UAAU1B,MAC3BC,SAAUK,EAAMoB,UAAUzB,SAC1BC,gBAAiBI,EAAMoB,UAAUxB,gBACjCC,YAAaG,EAAMoB,UAAUvB,YAC7BC,WAAYE,EAAMoB,UAAUtB,cA0BY,CAC5CU,SL9D6B,SAACD,GAAD,MAAqB,CAAEL,KAAMf,EAAQoB,WK+DlEmB,WL9D+B,SAACnB,GAAD,MAAqB,CAAEL,KAAMd,EAAUmB,WK+DtE8B,SL9D+B,SAAC3C,GAAD,MAAkC,CAAEQ,KAAMb,EAAWK,UK+DpFqC,eL9DqC,SAAClC,GAAD,MAA0B,CAAEK,KAAMZ,EAAkBO,gBK+DzF4C,mBL9DyC,SAACC,GAAD,MAAyB,CAAExC,KAAMX,EAAuBK,gBAAiB8C,IK+DlHV,mBL9D0C,SAAClC,GAAD,MAA0B,CAAEI,KAAMV,EAAoBM,gBKwD7EgD,CAOpBhB,G,kCCvFYiB,EAjBkB,SAACrC,GAEhC,OACE,sBAAKtC,UAAWC,IAAQK,KAAxB,UACE,gCACE,qBAAKE,IAAI,cAAcC,IAAI,oEACtB6B,EAAMsC,WAEb,8BACE,iCACGtC,EAAMuC,UADT,kBC+BOC,EAzCuB,SAACxC,GAErC,IAAIyC,EAAgBzC,EAAM0C,YAAYC,UAAUjD,KAAI,SAAAkD,GAAC,OAAI,cAAC,EAAD,CAAMN,QAASM,EAAEN,QAASC,UAAWK,EAAEL,eAE5FM,EAAiBZ,IAAMa,YAoB3B,OACE,sBAAKpF,UAAWC,IAAQK,KAAxB,UACE,0CACA,0BAAU+E,IAAKF,EAAgBG,SAfnC,WACE,GAAIH,EAAeI,QAAS,CAC1B,IAAIC,EAAOL,EAAeI,QAAQE,MAClCnD,EAAMoD,WAAWF,KAYsCC,MAAOnD,EAAM0C,YAAYW,YAAaC,WATjG,SAAsBC,GACN,UAAVA,EAAEC,KACJxD,EAAMyD,aAQN,8BACE,wBAAQlD,QAvBd,WACEP,EAAMyD,WAsBF,8BAEF,8BACE,wBAAQlD,QAvBd,WACEP,EAAM0D,cAsBF,sBAEF,qBAAKhG,UAAWC,IAAQgG,KAAxB,SACGlB,Q,eCzBImB,EAAW,WACXC,EAAuB,uBACvBC,EAAe,eACfC,EAAmB,mBAE5BhF,GAAe,CACf4D,UAAW,CACP,CAAE/C,GAAIoE,eAAM1B,QAAS,+GAA4FC,UAAW,IAC5H,CAAE3C,GAAIoE,eAAM1B,QAAS,6FAA8FC,UAAW,IAC9H,CAAE3C,GAAIoE,eAAM1B,QAAS,yFAA0FC,UAAW,KAE9Hc,YAAa,GACbY,QAAS,IAgCEC,GAlBQ,WAAmG,IAAlG5E,EAAiG,uDAAjEP,GAAcQ,EAAmD,uCACrH,OAAQA,EAAOC,MACX,KAAKoE,EACD,OAAO,2BAAKtE,GAAZ,IAAmB+D,YAAa,GAAIV,UAAU,GAAD,mBAAMrD,EAAMqD,WAAZ,CAAuB,CAAE/C,GAAIoE,eAAM1B,QAAShD,EAAM+D,YAAad,UAAW,OAE3H,KAAKsB,EACD,OAAO,2BAAKvE,GAAZ,IAAmB+D,YAAa9D,EAAO4E,UAE3C,KAAKL,EACD,OAAO,2BAAKxE,GAAZ,IAAmBqD,UAAW,KAElC,KAAKoB,EACD,OAAO,2BAAKzE,GAAZ,IAAmB2E,QAAS1E,EAAO0E,UAEvC,QACI,OAAO3E,ICnBJ8E,GADUhC,aAlBH,SAAC9C,GACnB,MAAO,CACHoD,YAAapD,EAAMoD,gBAGF,SAAC2B,GACtB,MAAO,CACHjB,WAAY,SAACF,GACTmB,EDU2B,SAACnB,GAAD,MAAmB,CAAE1D,KAAMqE,EAAsBM,QAASjB,GCV5EoB,CAA0BpB,KAEvCO,QAAS,WACLY,EDM6B,CAAE7E,KAAMoE,KCJzCF,WAAY,WACRW,EDKgC,CAAE7E,KAAMsE,QCD3B1B,CAA6CI,G,oBCgBvD+B,GA1BE,SAACvE,GAA4B,IAAD,MAC3C,OAAKA,EAAMiE,QAKT,sBAAKvG,UAAWC,KAAQ6G,UAAxB,UACE,qBAAKtG,IAAI,oGAAoBC,IAAI,wNACjC,sBAAKT,UAAS,UAAKC,KAAQK,KAAb,YAAqBL,KAAQ8G,UAA3C,iFAEE,yFAGA,gCACE,qBAAKtG,IAAG,UAAE6B,EAAMiE,QAAQrD,cAAhB,aAAE,EAAsB8D,MAAOxG,IAAI,YAD7C,2BAGK8B,EAAMiE,QAAQU,SAHnB,IAG8B3E,EAAMiE,QAAQW,QAH5C,+BAKW5E,EAAMiE,QAAQY,gBALzB,aAKW,EAAwBC,OALnC,wBAMc9E,EAAMiE,QAAQY,gBAN5B,aAMc,EAAwBE,mBAjBnC,cAAC,EAAD,KCfIC,GATK,SAAChF,GACnB,OACE,gCACE,cAAC,GAAD,CAAUiE,QAASjE,EAAMiE,UACzB,cAAC,GAAD,Q,QCcAgB,G,uKACJ,WAAqB,IAAD,OACbnD,KAAK9B,MAAMkF,MAAMC,OAAOC,SAC3BtD,KAAK9B,MAAMkF,MAAMC,OAAOC,OAAS,KAEnC7D,IAAMC,IAAN,+DAAkEM,KAAK9B,MAAMkF,MAAMC,OAAOC,SACvF3D,MAAK,SAAAC,GACJ,EAAK1B,MAAMqF,eAAe3D,EAASE,W,oBAGzC,WACE,OACE,cAAC,GAAD,eAAiBE,KAAK9B,Y,GAZOiC,IAAMC,WAsBrCoD,GAAiCC,aAAWN,IAEjC7C,gBAPO,SAAC9C,GACrB,MAAO,CACL2E,QAAS3E,EAAMoD,YAAYuB,WAK+C,CAAEoB,eJRvC,SAACpB,GAAD,MAAwC,CAAEzE,KAAMuE,EAAkBE,aIQ5F7B,CAAgHkD,I,gDC6ChHE,GA7EiD,SAACxF,GAC7D,IAAMyF,EAAmBzF,EAAM0F,MAAMhG,KAAI,SAAAC,GACrC,OACI,qBAAIjC,UAAS,WAAkB,IAAbiC,EAAEgG,OAAkB,UAAY,GAArC,YAA2ChI,KAAQiI,iBAAhE,UACI,uBAEIpG,KAAK,WACLwD,SAAU,SAACO,GAAD,OAAOvD,EAAM6F,iBAAiBlG,EAAEC,GAAI2D,EAAEuC,cAAcC,UAC9DA,QAASpG,EAAEgG,OACXxC,MAAOxD,EAAEqG,QAEb,+BAAOrG,EAAEqG,QACT,wBAAQzF,QAAS,kBAAMP,EAAMiG,WAAWtG,EAAEC,KAA1C,iBAToFD,EAAEC,OAclG,EAAwCsG,mBAAiB,IAAzD,oBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA0BF,oBAAkB,GAA5C,oBAAOG,EAAP,KAAcC,EAAd,KAEMC,EAAU,WACZ,IAAMC,EAAeL,EAAaM,OAC9BD,GACAxG,EAAMuG,QAAQC,GACdJ,EAAgB,KAEhBE,GAAS,GAEbF,EAAgB,KAcdM,EAA+B,QAAjB1G,EAAM2G,OAAmB,gBAAkB,GACzDC,EAAkC,WAAjB5G,EAAM2G,OAAsB,gBAAkB,GAC/DE,EAAqC,cAAjB7G,EAAM2G,OAAyB,gBAAkB,GACrEG,EAAeT,EAAQ,qBAAK7I,MAAO,CAAEuJ,gBAAiB,MAAOC,MAAO,QAASC,WAAY,IAAKC,UAAW,UAAlF,+BAAwH,GACrJ,OACI,sBAAKxJ,UAAWC,KAAQwJ,SAAxB,UACI,8BACI,6BAAKnH,EAAMgG,UAEf,uBACItI,UAAW2I,EAAQ,QAAU,GAC7BrD,SAvBoB,SAACoE,GAC7Bd,GAAS,GACTF,EAAgBgB,EAAMtB,cAAc3C,QAsB5BA,MAAOgD,EACP7C,WArBc,SAACC,IACnBA,EAAE8D,SAAqB,UAAV9D,EAAEC,MACf+C,KAoBIe,YAAY,oBAEfR,EACD,wBAAQvG,QAASgG,EAAjB,eACA,6BACKd,IAEL,gCACI,wBACI/H,UAAWgJ,EACXnG,QA3BD,kBAAMP,EAAMuH,aAAa,QAyB5B,iBAGA,wBACI7J,UAAWkJ,EACXrG,QA7BE,kBAAMP,EAAMuH,aAAa,WA2B/B,oBAGA,wBACI7J,UAAWmJ,EACXtG,QA/BK,kBAAMP,EAAMuH,aAAa,cA6BlC,8BCnCDC,GAtCE,WACb,MAAwBtB,mBAA0B,CAC9C,CAAEtG,GAAIoE,eAAMgC,MAAO,OAAQL,QAAQ,GACnC,CAAE/F,GAAIoE,eAAMgC,MAAO,MAAOL,QAAQ,GAClC,CAAE/F,GAAIoE,eAAMgC,MAAO,QAASL,QAAQ,GACpC,CAAE/F,GAAIoE,eAAMgC,MAAO,QAASL,QAAQ,KAJxC,oBAAKD,EAAL,KAAY+B,EAAZ,KAOA,EAA0BvB,mBAA2B,OAArD,oBAAKS,EAAL,KAAae,EAAb,KAkBIC,EAAkCjC,EAMtC,MALe,WAAXiB,EACAgB,EAAiBjC,EAAMiB,QAAO,SAAAhH,GAAC,OAAiB,IAAbA,EAAEgG,UACnB,cAAXgB,IACPgB,EAAiBjC,EAAMiB,QAAO,SAAAhH,GAAC,OAAiB,IAAbA,EAAEgG,WAGrC,qBAAKjI,UAAWC,KAAQiK,MAAxB,SACI,cAAC,GAAD,CAAmB5B,MAAO,aAAcN,MAAOiC,EAAgBhB,OAAQA,EAAQV,WAxBpE,SAAC4B,GAChBJ,EAAS/B,EAAMiB,QAAO,SAAAhH,GAAC,OAAIA,EAAEC,KAAOiI,OAuBuEN,aAAcG,EAAWnB,QApBxH,SAACP,GACb,IAAM8B,EAAoB,CACtBlI,GAAIoE,eACJgC,QACAL,QAAQ,GAEZ8B,EAAS,CAACK,GAAF,mBAAcpC,MAcgIG,iBAZjI,SAACgC,EAAgBlC,GACtC8B,EAAS/B,EAAMhG,KAAI,SAAAC,GAAC,OAAIA,EAAEC,KAAOiI,EAAT,2BAAuBlI,GAAvB,IAA0BgG,WAAWhG,YCnBtDoI,GARsB,SAAC,GAAmE,IAAjEzH,EAAgE,EAAhEA,OAAmB0H,GAA6C,EAAxDC,UAAwD,EAA7CD,UAAoBE,GAAyB,EAAnCC,SAAmC,EAAzBD,oBAE3E,OACI,qBAAK1K,MAAO8C,IAAW0H,EAAW,CAAEjB,gBAAiB,WAAc,CAAEA,gBAAiB,WAAtF,SACI,qBAAKrJ,UAAWwK,EAAhB,SAAqC5H,O,oBCKlC8H,GATwB,SAAC,GAAkE,IAAhEC,EAA+D,EAA/DA,UAAWC,EAAoD,EAApDA,YAAaC,EAAuC,EAAvCA,eAAgBC,EAAuB,EAAvBA,iBAE9E,OACI,iCACI,wBAAQ9K,UAAW+K,KAAEC,OAAQnI,QAAS8H,EAAWM,SAAUJ,EAA3D,iBACA,wBAAQ7K,UAAW+K,KAAEC,OAAQnI,QAAS+H,EAAaK,SAAUH,EAA7D,uBCiBGI,GAxBC,WACZ,MAA0B1C,mBAAiB,GAA3C,oBAAK5F,EAAL,KAAa2H,EAAb,KAYIC,EAVW,IAUW5H,EAAA,UAAyBmI,KAAEnI,QAA3B,UAAyCmI,KAAEnI,OAA3C,YAAqDmI,KAAEI,SAE7EN,EAZW,IAYOjI,EAClBkI,EAZW,IAYSlI,EACxB,OACI,sBAAK5C,UAAW+K,KAAEK,GAAlB,UACI,cAAC,GAAD,CAAQxI,OAAQA,EAAQ2H,UAAWA,EAAWD,SAhBvC,EAgB2DG,SAf3D,EAe+ED,mBAAoBA,IAC1G,cAAC,GAAD,CAASG,UAdD,WACR/H,EAJO,GAKP2H,EAAU3H,EAAS,IAYYgI,YATrB,kBAAML,EAAU,IAS+BM,eAAgBA,EAAgBC,iBAAkBA,Q,oBCfvH,SAASO,GAAT,GAAqD,IAArCC,EAAoC,EAApCA,SAAUzI,EAA0B,EAA1BA,QACtB,OAAO,sBAAMA,QAASA,EAAS/C,MAAO,CAAEyL,OAAQ,WAAzC,SAAuDD,EAAW,SAAW,WAGzE,SAASE,GAAOlJ,GAC3B,MAA4BkG,mBAASlG,EAAMmD,OAA3C,oBAAOgG,EAAP,KAAeC,EAAf,KAEA,OACI,sBAAK1L,UAAWC,KAAQmL,GAAxB,kCAEI,8BACC5I,MAAMF,EAAMgI,UAAU7H,KAAK,MAAMT,KAAI,SAACU,EAAGC,GAAJ,OAAU,cAAC0I,GAAD,CAAMC,SAAU3I,EAAI8I,EAAQ5I,QAAS,kBAAM6I,EAAU/I,EAAI,c,wBCfrH,SAASgJ,GAAerJ,GACpB,OACI,6BACKA,EAAMgG,QAInB,SAASsD,KACL,OACI,qBAAI9L,MAAO,CAAC0J,UAAW,UAAvB,UACI,wDACA,6HACA,uGACA,+FAQG,SAASqC,GAAUvJ,GAC9B,MAAkCkG,oBAAS,GAA3C,oBAAOsD,EAAP,KAAkBC,EAAlB,KAEA,OACI,sBAAK/L,UAAWC,KAAQmL,GAAItL,MAASgM,EAAY,CAACE,OAAQ,SAAW,CAACA,OAAQ,SAA9E,UACI,cAACL,GAAD,CAAgBrD,MAAOhG,EAAM2J,aAC7B,wBAAQpJ,QAAS,kBAAMkJ,GAAcD,IAArC,SAAkDA,EAAY,OAAS,cACrEA,GAAa,cAACF,GAAD,OCjCZ,SAASM,KAEpB,MAAkB1D,oBAAS,GAA3B,oBAAK2D,EAAL,KAASC,EAAT,KAEMC,EAAU,CACZC,MAAO,OACPN,OAAQ,OACRO,OAAQ,kBACRC,QAAS,eACTC,QAAS,MACTpD,gBAAiB8C,EAAK,QAAU,SAE9BO,EAAW,CACbJ,MAAO,OACPN,OAAQ,OACRO,OAAQ,kBACRC,QAAS,eACTG,WAAY,MACZF,QAAS,MACTpD,gBAAiB8C,EAAK,QAAU,OAE9BS,EAAiB,CACnBN,MAAO,OACPN,OAAQ,OACRa,aAAc,OACdN,OAAQ,kBACRC,QAAS,eACTG,WAAY,OACZtD,gBAAiB8C,EAAK,QAAU,OASpC,OAAO,sBAAKrM,MAPM,CACdyM,OAAQ,iBACRP,OAAQ,OACRa,aAAc,OACdJ,QAAS,QAGN,UACH,qBAAK3M,MAAOuM,EAASxJ,QAAS,kBAAMuJ,GAAM,IAA1C,gBACA,qBAAKtM,MAAO4M,EAAU7J,QAAS,kBAAMuJ,GAAM,IAA3C,iBACA,qBAAKtM,MAAO8M,EAAZ,kBClCR,IAYeE,GAZM,WAEjB,OACI,sBAAK9M,UAAWC,KAAQiK,MAAxB,UACI,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAACgC,GAAD,IACA,cAACL,GAAD,CAAWI,WAAW,+DACtB,cAACT,GAAD,CAAQ/F,MAAO,EAAG6E,SAAU,Q,wCC0BzByC,GAzCC,WACZ,OACI,sBAAK/M,UAAWC,KAAQ+M,KAAxB,UACI,sBAAKlN,MAAO,CAAE2M,QAAS,QAAvB,kDAAsE,mBAAGtM,KAAK,+BAAR,6CACtE,qBAAKL,MAAO,CAAEmN,YAAa,QAA3B,SAAqC,sDACrC,sBAAKnN,MAAO,CAAEmN,YAAa,QAA3B,UACI,sBAAKnN,MAAO,CAAEmN,YAAa,QAA3B,cAAsC,kCAAtC,gLACA,sBAAKnN,MAAO,CAAEmN,YAAa,QAA3B,cAAsC,kCAAtC,2CACA,sBAAKnN,MAAO,CAAEmN,YAAa,QAA3B,cAAsC,kCAAtC,iDAEJ,sBAAKnN,MAAO,CAAE2M,QAAS,QAAvB,0BAA8C,mBAAGtM,KAAK,gFAAR,8CAC9C,sBAAKL,MAAO,CAAE2M,QAAS,QAAvB,UACI,6DACA,8BACI,mBAAGtM,KAAK,mCAAR,gDAEJ,8BACI,mBAAGA,KAAK,4CAAR,yDAEJ,8BACI,mBAAGA,KAAK,gFAAR,gGAGR,sBAAKL,MAAO,CAAE2M,QAAS,QAAvB,UACI,uCADJ,0BAE2B,mBAAGtM,KAAK,2BAAR,0BACvB,wDACA,uCACA,mBAAGA,KAAK,gFAAR,6EACA,iGACA,uCACA,mBAAGA,KAAK,4BAAR,2CACA,oEACA,uCACA,mBAAGA,KAAK,wBAAR,uDACA,sFCzBD+M,GAPS,WACpB,OACI,qBAAKlN,UAAWC,KAAQK,KAAxB,SACI,cAAC,GAAD,O,oBCEG6M,GAPD,WACV,OACI,qBAAKnN,UAAYC,KAAQK,KAAzB,6B,oBCSO8M,GAT+B,SAAC9K,GAC3C,OACI,sBAAKtC,UAAWC,KAAQoN,QAAU,IAAMpN,KAAQqN,OAAS,IAAMrN,KAAQK,KAAvE,UACI,qBAAKG,IAAK6B,EAAMiL,MAAO/M,IAAI,gBAC3B,cAAC,IAAD,CAASI,GAAI,YAAc0B,EAAMJ,GAAIrB,gBAAiBZ,KAAQa,WAA9D,SAA2EwB,EAAMe,WCK9EmK,GAR0B,SAAClL,GACtC,OACI,8BACA,qBAAKtC,UAAWC,KAAQwN,QAAxB,SAAkCnL,EAAMsC,aCqCjC8I,GAvCwB,SAACpL,GAEpC,IAAIqL,EAAkBrL,EAAMsL,YAAYP,QAAQrL,KAAI,SAAA6L,GAAC,OAAI,cAAC,GAAD,CAAyB3L,GAAI2L,EAAE3L,GAAImB,KAAMwK,EAAExK,KAAMkK,MAAOM,EAAEN,OAAvCM,EAAE3L,OAC1E4L,EAAmBxL,EAAMsL,YAAYG,SAAS/L,KAAI,SAAAgM,GAAC,OAAI,cAAC,GAAD,CAAuBpJ,QAASoJ,EAAEpJ,SAAjBoJ,EAAE9L,OAE1E+L,EAAoB1J,IAAMa,YAkB9B,OACI,sBAAKpF,UAAWC,KAAQoN,QAAxB,UACI,qBAAKrN,UAAWC,KAAQiO,aAAxB,SACKP,IAGL,sBAAK3N,UAAWC,KAAQ8N,SAAxB,UACKD,EACD,0BAAUzI,IAAK4I,EAAmB3I,SApB9C,WACQ2I,EAAkB1I,SAClBjD,EAAM6L,cAAcF,EAAkB1I,QAAQE,QAkBmBA,MAAOnD,EAAMsL,YAAYQ,eAAgBxI,WAdlH,SAAsBC,GACJ,UAAVA,EAAEC,KACFxD,EAAM+L,gBAaF,wBAAQxL,QAzBpB,WACIP,EAAM+L,cAwBE,gCCjBHC,GAA0B,0BAC1BC,GAAc,cAQvBlN,GAAe,CACfgM,QAAS,CACL,CAAEnL,GAAIoE,eAAMjD,KAAM,eAAgBkK,MAAO,uGACzC,CAAErL,GAAIoE,eAAMjD,KAAM,WAAYkK,MAAO,kIACrC,CAAErL,GAAIoE,eAAMjD,KAAM,kBAAmBkK,MAAO,6GAC5C,CAAErL,GAAIoE,eAAMjD,KAAM,6BAA8BkK,MAAO,2FAE3DQ,SAAU,CACN,CAAE7L,GAAIoE,eAAM1B,QAAS,MACrB,CAAE1C,GAAIoE,eAAM1B,QAAS,qCACrB,CAAE1C,GAAIoE,eAAM1B,QAAS,6BAEzBwJ,eAAgB,IAmBLI,GAhBQ,WAAmG,IAAlG5M,EAAiG,uDAAjEP,GAAcQ,EAAmD,uCACrH,OAAQA,EAAOC,MACX,KAAKwM,GACD,OAAO,2BAAI1M,GAAX,IAAkBwM,eAAgBvM,EAAO4E,UAE7C,KAAK8H,GACD,OAAO,2BAAI3M,GAAX,IACIwM,eAAgB,GAChBL,SAAS,GAAD,mBAAMnM,EAAMmM,UAAZ,CAAsB,CAAE7L,GAAIoE,eAAM1B,QAAShD,EAAMwM,oBAIjE,QACI,OAAOxM,ICxBJ6M,GAFU/J,aAfH,SAAC9C,GACnB,MAAO,CACHgM,YAAahM,EAAMgM,gBAGF,SAACjH,GACtB,MAAO,CACH0H,WAAY,WACR1H,EDAgC,CAAE7E,KAAMyM,MCE5CJ,cAAe,SAAC3I,GACZmB,EDF8B,SAACnB,GAAD,MAAmB,CAAE1D,KAAMwM,GAAyB7H,QAASjB,GCElFkJ,CAA6BlJ,QAIzBd,CAA6CgJ,ICKvDiB,OAxBf,WAIE,MAA0B,MAFTC,eAEJC,SACJ,cAAC,KAAD,CAAUjO,GAAG,cAIpB,sBAAKZ,UAAU,cAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKA,UAAU,sBAAf,UACE,cAAC,KAAD,CAAO8O,KAAM,qBAAsBC,OAAQ,kBAAM,cAAC,GAAD,OACjD,cAAC,KAAD,CAAOD,KAAM,oBAAqBC,OAAQ,kBAAM,cAAC,GAAD,OAChD,cAAC,KAAD,CAAOC,OAAK,EAACF,KAAM,WAAYC,OAAQ,kBAAM,cAAC,GAAD,OAC7C,cAAC,KAAD,CAAOD,KAAM,SAAUC,OAAQ,kBAAM,cAAC,GAAD,OACrC,cAAC,KAAD,CAAOD,KAAM,SAAUC,OAAQ,kBAAM,cAAC,EAAD,UAEvC,cAAC,GAAD,Q,SCzBFE,GAAcC,aAAgB,CAC9BlK,YAAamK,GACbvB,YAAawB,GACbpM,UAAWqM,IAKAC,GAFHC,aAAYN,ICLxBO,IAAST,OACP,cAAC,IAAD,CAAeU,SAAU,UAAzB,SACE,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACE,cAAC,GAAD,UAINK,SAASC,eAAe,W","file":"static/js/main.4e90d514.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"activeLink\":\"Navbar_activeLink__3etBE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"activeLink\":\"Dialogs_activeLink__34w6e\",\"messages\":\"Dialogs_messages__1w_Up\",\"item\":\"Dialogs_item__29pPd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"number\":\"counter_number__3TH36\",\"forfive\":\"counter_forfive__1dAkR\",\"ac\":\"counter_ac__3FoK1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toDoList\":\"ToDoList_toDoList__2PB_l\",\"active-filter\":\"ToDoList_active-filter__1JGSA\",\"is-done\":\"ToDoList_is-done__3VUte\",\"error\":\"ToDoList_error__EZ88M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"item\":\"Header_item__3IlmB\",\"gridContainer\":\"Header_gridContainer__3Bd07\",\"a\":\"Header_a__1Re6_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MainInfo_item__2HXZk\",\"container\":\"MainInfo_container__29xve\",\"centered\":\"MainInfo_centered__12BOe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"a\":\"Contacts_a__TLfP-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Users_item__2_u8d\",\"selectedPage\":\"Users_selectedPage__J63sh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__pQ6IE\",\"post\":\"MyPosts_post__14H_U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3Pfp9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"works\":\"WorkExamples_works__3VTTk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ac\":\"Rating_ac__32mFP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ac\":\"Accordion_ac__1qDHp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MoreInformation_item__3wulB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"AboutMe_main__28Sd6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Music_item__2ushy\"};","import classes from './Contacts.module.css';\nconst Contacts = () => {\n    return (\n        <div style={{ gridArea: 'c'}}>\n            <div className={classes.a}>\n                Phone number\n        <a href=\"tel:=375(25)5413874\" >  +375(25) 541-38-74 </a>\n            </div>\n            <div className={classes.a}>\n                Mailing address \n            <a href=\"mailto:diana.lyah.96@mail.ru\" >  diana.lyah.96@mail.ru </a>\n            </div>\n        </div >\n    )\n}\nexport default Contacts;\n\n","import classes from './Header.module.css';\nimport Contacts from './Contacts/Contacts';\n\nconst Header = () => {\n    return (\n        <header className= {`${classes.header} ${classes.item} ${classes.gridContainer}`}>\n            <img style ={{gridArea: 'p'}} alt='Вставить картинку' src ='https://upload.wikimedia.org/wikipedia/commons/thumb/9/99/Unofficial_JavaScript_logo_2.svg/1200px-Unofficial_JavaScript_logo_2.svg.png'/>\n            <a href=\"mailto:diana.lyah.96@mail.ru\" className= {classes.a}> Invitation to Interview </a>\n            <Contacts />\n        </header>\n    )\n}\nexport default Header;","import React from 'react';\nimport classes from './Navbar.module.css';\nimport {NavLink} from 'react-router-dom';\nconst Navbar = () => {\n    return (\n        <nav className= {classes.nav}>\n            <div className= {classes.item}>\n                <NavLink to='/mainPage' activeClassName= {classes.activeLink}>Main page</NavLink>\n            </div>\n            <div className= {classes.item}>\n                <NavLink to= '/moreInformaition' activeClassName= {classes.activeLink}>More about me</NavLink>\n            </div>\n            <div className= {classes.item}>\n                <NavLink to= '/message' activeClassName= {classes.activeLink}>Message</NavLink>\n            </div>\n            <div className= {classes.item}>\n                <NavLink to='/music' activeClassName= {classes.activeLink}>Music for soul</NavLink>\n            </div>\n            <div className= {classes.item}>\n                <NavLink to='/users' activeClassName= {classes.activeLink}>Friends</NavLink>\n            </div>\n\n        </nav>\n    )\n}\nexport default Navbar;","type AllActionsType = FollowActionType | UnfollowActionType | SetUsersActionCreator | SetCurrentPageActionCreator | SetTotalUsersCountActionCreator | SetToggleIsFetchingActionCreator;\n\nexport type LocationType = {\n    country: string\n    city: string\n}\n\ntype PhotoType = {\n    small: string | null\n    large: string | null\n}\n\nexport type UsersItemType = {\n    name: string\n    id: string\n    photos: PhotoType\n    status: string | null\n    followed: boolean\n}\n\nexport type InitialUsersPageType = {\n    users: Array<UsersItemType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n}\n\nexport const FOLLOW = 'FOLLOW' as const;\nexport const UNFOLLOW = 'UNFOLLOW' as const;\nexport const SET_USERS = 'SET-USERS' as const;\nexport const SET_CURRENT_PAGE = 'SET-CURRENT-PAGE' as const;\nexport const SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT' as const;\nexport const TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING' as const;\n\ntype FollowActionType = ReturnType<typeof followActionCreator>;\ntype UnfollowActionType = ReturnType<typeof unfollowActionCreator>;\ntype SetUsersActionCreator = ReturnType<typeof setUsersActionCreator>;\ntype SetCurrentPageActionCreator = ReturnType<typeof setCurrentPageActionCreator>;\ntype SetTotalUsersCountActionCreator = ReturnType<typeof setTotalUsersCountActionCreator>;\ntype SetToggleIsFetchingActionCreator = ReturnType<typeof setToggleIsFetchingActionCreator>;\n\n\nexport let followActionCreator = (userId: string) => ({ type: FOLLOW, userId } as const);\nexport let unfollowActionCreator = (userId: string) => ({ type: UNFOLLOW, userId } as const)\nexport let setUsersActionCreator = (users: Array<UsersItemType>) => ({ type: SET_USERS, users } as const);\nexport let setCurrentPageActionCreator = (currentPage: number) => ({ type: SET_CURRENT_PAGE, currentPage } as const)\nexport let setTotalUsersCountActionCreator = (totalCount: number) => ({ type: SET_TOTAL_USERS_COUNT, totalUsersCount: totalCount } as const)\nexport let setToggleIsFetchingActionCreator = (isFetching: boolean) => ({ type: TOGGLE_IS_FETCHING, isFetching } as const)\n\nlet initialState = {\n    users: [],\n    pageSize: 7,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n};\n\nconst UsersReduser = (state: InitialUsersPageType = initialState, action: AllActionsType): InitialUsersPageType => {\n    switch (action.type) {\n        case FOLLOW: {\n            let newFollow = state.users.map(t => t.id === action.userId ? { ...t, followed: false } : t)\n            return { ...state, users: newFollow };\n        }\n        case UNFOLLOW: {\n            let newFollow = state.users.map(t => t.id === action.userId ? { ...t, followed: true } : t)\n            return { ...state, users: newFollow };\n        }\n        case SET_USERS: {\n            return { ...state, users: action.users };\n        }\n        case SET_CURRENT_PAGE: {\n            return { ...state, currentPage: action.currentPage };\n        }\n        case SET_TOTAL_USERS_COUNT: {\n            return { ...state, totalUsersCount: action.totalUsersCount };\n        }\n        case TOGGLE_IS_FETCHING: {\n            return { ...state, isFetching: action.isFetching }\n        }\n        default:\n            return state;\n    }\n}\nexport default UsersReduser;","export default __webpack_public_path__ + \"static/media/man.1c0b4819.png\";","import classes from './Users.module.css';\nimport { UsersItemType } from '../../redux/usersReducer';\nimport photoMan from '../../accets/images/man.png';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype UsersType = {\n    totalUsersCount: number\n    pageSize: number\n    currentPage: number\n    usersPage: Array<UsersItemType>\n    onPageChanged: (number: number) => void\n    followed: (userId: string) => void\n    unfollowed: (userId: string) => void\n}\nconst Users = (props: UsersType) => {\n    // let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\n    let pages = Array(10).fill(0).map((_, i) => i + 1);\n    // for (let i = 1; i <= 10; i++) {\n    //     pages.push(i);\n    // }\n    return (\n        <div className={classes.item}>\n            <div>\n                {pages.map(number => <span onClick={() => { props.onPageChanged(number) }} className={props.currentPage === number ? classes.selectedPage : ''}> {number} </span>)}\n            </div>\n            {props.usersPage.map(user =>\n                <div key={user.id}>\n                    <div>\n                        <NavLink to={'/mainPage/' + user.id}>\n                            <img src={user.photos.small ? user.photos.small : photoMan} alt='Man' />\n                        </NavLink>\n                    </div>\n                    {user.name}\n                    {user.followed ?\n                        <button onClick={() => props.followed(user.id)}>UnFollow</button> :\n                        <button onClick={() => props.unfollowed(user.id)}>Follow</button>}\n                    <div>{user.status}</div>\n                    <div>{'user.location.country'}</div>\n                    <div>{'user.location.city'}</div>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default Users;\n","export default __webpack_public_path__ + \"static/media/loaderGif.85e15ac8.svg\";","import loaderGif from '../../../accets/images/loaderGif.svg';\n\nconst Preloader = () => {\n    return <div><img src={loaderGif} alt='loader' /></div>\n}\nexport default Preloader;","import React from 'react';\nimport { UsersItemType, followActionCreator, unfollowActionCreator, setUsersActionCreator, setCurrentPageActionCreator, setTotalUsersCountActionCreator, setToggleIsFetchingActionCreator } from '../../redux/usersReducer';\nimport { connect } from 'react-redux';\nimport { AppStateType } from '../../redux/reduxStore';\nimport axios from 'axios';\nimport Users from './Users';\nimport Preloader from '../common/preloader/Preloader';\n\n\ntype MapStateToPropsType = {\n    usersPage: Array<UsersItemType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n}\n\ntype MapDispatchToPropsType = {\n    followed: (userId: string) => void\n    unfollowed: (userId: string) => void\n    setUsers: (users: Array<UsersItemType>) => void\n    setCurrentPage: (currentPage: number) => void\n    setTotalUsersCount: (totalCount: number) => void\n    setToggleIsFetchig: (isFetching: boolean) => void\n}\n\nexport type MyFriendsType = MapDispatchToPropsType & MapStateToPropsType;\n\n\ntype UsersPropsType = {\n    usersPage: Array<UsersItemType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followed: (userId: string) => void\n    unfollowed: (userId: string) => void\n    setUsers: (users: Array<UsersItemType>) => void\n    setCurrentPage: (number: number) => void\n    setTotalUsersCount: (totalCount: number) => void\n    setToggleIsFetchig: (isFetching: boolean) => void\n}\nclass UsersAPIComponent extends React.Component<UsersPropsType> {\n\n    componentDidMount() {\n        this.props.setToggleIsFetchig(true);\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\n            .then(response => {\n                this.props.setToggleIsFetchig(false);\n                this.props.setUsers(response.data.items);\n                this.props.setTotalUsersCount(response.data.totalCount)\n            });\n    }\n    onPageChanged = (number: number) => {\n        this.props.setCurrentPage(number);\n        this.props.setToggleIsFetchig(true);\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${number}&count=${this.props.pageSize}`)\n            .then(response => {\n                this.props.setToggleIsFetchig(false);\n                this.props.setUsers(response.data.items);\n            })\n    }\n\n    render() {\n        return <>{this.props.isFetching ? <Preloader /> : null}\n            <Users totalUsersCount={this.props.totalUsersCount} pageSize={this.props.pageSize}\n                currentPage={this.props.currentPage} usersPage={this.props.usersPage}\n                followed={this.props.followed} unfollowed={this.props.unfollowed} onPageChanged={this.onPageChanged} />\n        </>\n    }\n}\n\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        usersPage: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n    }\n}\n// let mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\n//     return {\n//         followed: (userId) => {\n//             dispatch(followActionCreator(userId));\n//         },\n//         unfollowed: (userId) => {\n//             dispatch(unfollowActionCreator(userId));\n//         },\n//         setUsers: (users) => {\n//             dispatch(setUsersActionCreator(users));\n//         },\n//         setCurrentPage: (currentPage) => {\n//             dispatch(setCurrentPageActionCreator(currentPage));\n//         },\n//         setTotalUsersCount: (totalCount) => {\n//             dispatch(setTotalUsersCountActionCreator(totalCount));\n//         },\n//         setToggleIsFetchig: (isFetching) => {\n//             dispatch(setToggleIsFetchingActionCreator(isFetching));\n//         }\n//     }\n// }\n\nconst UsersContainer = connect(mapStateToProps, {\n    followed: followActionCreator,\n    unfollowed: unfollowActionCreator,\n    setUsers: setUsersActionCreator,\n    setCurrentPage: setCurrentPageActionCreator,\n    setTotalUsersCount: setTotalUsersCountActionCreator,\n    setToggleIsFetchig: setToggleIsFetchingActionCreator\n})(UsersAPIComponent);\nexport default UsersContainer;\n","import classes from './Post.module.css'\n\ntype PostType = {\n  message: string\n  likecount: number\n}\n\nconst Post: React.FC<PostType> = (props) => {\n\n  return (\n    <div className={classes.item}>\n      <div>\n        <img alt='Can not add' src='https://hi-news.ru/wp-content/uploads/2016/05/razum-750x521.jpg' />\n            {props.message}\n          </div>\n      <div>\n        <span>\n          {props.likecount} Likes\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default Post;","import classes from './MyPosts.module.css';\nimport Post from './OnePost/Post';\nimport React, { KeyboardEvent } from 'react';\nimport {MyPostType} from './MyPostConteiner';\n\n\nconst MyPosts: React.FC<MyPostType> = (props) => {\n\n  let postsElements = props.profilePage.postsData.map(p => <Post message={p.message} likecount={p.likecount} />);\n\n  let newPostElement = React.createRef<HTMLTextAreaElement>();\n\n  function onAddPost() {\n    props.addPost();\n  }\n  function deletePost() {\n    props.deletePost();\n  }\n  function onPostChange() {\n    if (newPostElement.current) {\n      let text = newPostElement.current.value;\n      props.postChange(text);\n    }\n  }\n  function onPressEnter(e: KeyboardEvent<HTMLTextAreaElement>) {\n    if (e.key === 'Enter') {\n      props.addPost();\n    }\n  }\n\n  return (\n    <div className={classes.item}>\n      <h3>My posts</h3>\n      <textarea ref={newPostElement} onChange={onPostChange} value={props.profilePage.newPostText} onKeyPress={onPressEnter} />\n      <div>\n        <button onClick={onAddPost}>Add motivation</button>\n      </div>\n      <div>\n        <button onClick={deletePost}>Remove</button>\n      </div>\n      <div className={classes.post}>\n        {postsElements}\n      </div>\n    </div>\n  )\n}\n\nexport default MyPosts;","import { v1 } from 'uuid';\nimport { ProfileInfoAboitUserType } from '../components/MainContent/MainInfo/MainInfo';\n\ntype AllActionsType = AddPostActionType | OnPostChangeActionType | DeletePostActionCreatorType | SetUserProfileActionCreator;\nexport type PostsType = {\n    id: string\n    message: string\n    likecount: number\n};\n\nexport type InitialProfilePageType = {\n    postsData: Array<PostsType>\n    newPostText: string\n    profile: ProfileInfoAboitUserType\n};\n\nexport const ADD_POST = 'ADD-POST' as const;\nexport const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT' as const;\nexport const DELETE_POSTS = 'DELETE-POSTS' as const;\nexport const SET_USER_PROFILE = 'SET-USER-PROFILE' as const;\n\nlet initialState = {\n    postsData: [\n        { id: v1(), message: 'You see things and say ‘Why?’, but I dream things and say ‘Why not?’ George Bernard Shaw', likecount: 29 },\n        { id: v1(), message: 'Success is going from failure to failure without losing your enthusiasm. Winston Churchill', likecount: 21 },\n        { id: v1(), message: 'Genius is one percent inspiration, and ninety-nine percent perspiration. Thomas Edison', likecount: 25 },\n    ],\n    newPostText: '',\n    profile: {} as ProfileInfoAboitUserType,\n}\n\ntype AddPostActionType = ReturnType<typeof addPostActionCreator>\ntype OnPostChangeActionType = ReturnType<typeof onPostChangeActionCreator>\ntype DeletePostActionCreatorType = ReturnType<typeof deletePostActionCreator>\ntype SetUserProfileActionCreator = ReturnType<typeof setUserProfileActionCreator>\n\nexport let addPostActionCreator = () => ({ type: ADD_POST });\nexport let onPostChangeActionCreator = (text: string) => ({ type: UPDATE_NEW_POST_TEXT, newText: text } as const)\nexport let deletePostActionCreator = () => ({ type: DELETE_POSTS });\nexport let setUserProfileActionCreator = (profile: ProfileInfoAboitUserType) => ({ type: SET_USER_PROFILE, profile });\n\n\nconst profileReduser = (state: InitialProfilePageType = initialState, action: AllActionsType): InitialProfilePageType => {\n    switch (action.type) {\n        case ADD_POST: {\n            return { ...state, newPostText: '', postsData: [...state.postsData, { id: v1(), message: state.newPostText, likecount: 0 }] };\n        }\n        case UPDATE_NEW_POST_TEXT: {\n            return { ...state, newPostText: action.newText };\n        }\n        case DELETE_POSTS: {\n            return { ...state, postsData: [] };\n        }\n        case SET_USER_PROFILE: {\n            return { ...state, profile: action.profile };\n        }\n        default:\n            return state;\n    }\n}\nexport default profileReduser;","import MyPosts from './MyPosts';\nimport { addPostActionCreator, onPostChangeActionCreator, deletePostActionCreator } from '../../../redux/profileReducer';\nimport { connect } from 'react-redux';\nimport { AppStateType } from '../../../redux/reduxStore';\nimport { InitialProfilePageType } from '../../../redux/profileReducer'\nimport { Dispatch } from 'redux';\n\ntype MapStateToPropsType = {\n    profilePage: InitialProfilePageType\n}\n\ntype MapDispatchToPropsType = {\n    postChange: (text: string) => void\n    addPost: () => void\n    deletePost: () => void\n\n}\nexport type MyPostType = MapDispatchToPropsType & MapStateToPropsType;\n\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        profilePage: state.profilePage\n    }\n}\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\n    return {\n        postChange: (text: string) => {\n            dispatch(onPostChangeActionCreator(text));\n        },\n        addPost: () => {\n            dispatch(addPostActionCreator());\n        },\n        deletePost: () => {\n            dispatch(deletePostActionCreator());\n        },\n    }\n}\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\nexport default MyPostsContainer;\n\n\n// const MyPostsContainer: React.FC<MyPostsPropsContainerType> = (props) => {\n\n//     let state = props.store.getState();\n//     function addPost() {\n//         props.store.dispatch(addPostActionCreator());\n//     }\n//     function postChange(text: string) {\n//         props.store.dispatch(onPostChangeActionCreator(text));\n//     }\n\n//     return (\n//         <MyPosts profilePage={state.profilePage} postChange={postChange} addPost={addPost} />\n//     )\n// }","import React from 'react'\nimport Preloader from '../../common/preloader/Preloader'\nimport classes from './MainInfo.module.css'\n\ntype ContactsUserType = {\n  instagram: string\n  github: string\n}\n\ntype PhotosUserType = {\n  small: string\n  large: string\n}\n\nexport type ProfileInfoAboitUserType = {\n  aboutMe: string\n  contacts: ContactsUserType\n  lookingForAJob: boolean\n  fullName: string\n  userId: number\n  photos: PhotosUserType\n}\n\nexport type MainContentType = {\n  profile: ProfileInfoAboitUserType\n}\n\nconst MainInfo = (props: MainContentType) => {\n  if (!props.profile) {\n    return <Preloader />\n  }\n\n  return (\n    <div className={classes.container}>\n      <img alt='Вставить картинку' src='https://nanosemantics.ai/wp-content/uploads/2019/12/%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5-%D0%B4%D0%BB%D1%8F-%D0%B4%D0%B5%D1%82%D0%B5%D0%B9-1024x683.jpg' />\n      <div className={`${classes.item} ${classes.centered}`}>\n        I like to learn, I like to write code and see the result of my work.\n        <div>\n          I am the frontend specialist that you are looking for!\n        </div>\n        <div>\n          <img src={props.profile.photos?.large} alt='My face' />\n          Information about me:\n          I {props.profile.fullName} {props.profile.aboutMe}\n          Contacts:\n          github: {props.profile.contacts?.github}\n          instagram: {props.profile.contacts?.instagram}\n        </div>\n\n      </div>\n      </div>)\n}\n\nexport default MainInfo;","import MyPostsContainer from './MyPosts/MyPostConteiner';\nimport MainInfo from './MainInfo/MainInfo';\nimport { MainContentType } from './MainInfo/MainInfo';\n\n\nconst MainContent = (props: MainContentType) => {\n  return (\n    <div>\n      <MainInfo profile={props.profile} />\n      <MyPostsContainer />\n    </div>\n  )\n}\n\nexport default MainContent;\n\n// export type MyPostsPropsType = {\n//   store: StoreType\n// }\n// : React.FC<MyPostsPropsType>","import MainContent from './MainContent'\nimport React from 'react';\nimport axios from 'axios';\nimport { setUserProfileActionCreator } from '../../redux/profileReducer';\nimport { AppStateType } from '../../redux/reduxStore';\nimport { connect } from 'react-redux';\nimport { ProfileInfoAboitUserType } from './MainInfo/MainInfo';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\n\ntype MainContentPropsType = MDTPType & MSTPType\n\ntype PropsForWithRouterType = RouteComponentProps<ParamsType> & MainContentPropsType\n\ntype ParamsType = {\n  userID: string | undefined\n}\ntype MDTPType = {\n  setUserProfile: (profile: ProfileInfoAboitUserType) => void\n}\ntype MSTPType = {\n  profile: ProfileInfoAboitUserType\n}\n\nclass MainContentContainer extends React.Component<PropsForWithRouterType> {\n  componentDidMount() {\n    if (!this.props.match.params.userID) {\n      this.props.match.params.userID = '2';\n    }\n    axios.get(`https://social-network.samuraijs.com/api/1.0/profile/${this.props.match.params.userID}`)\n      .then(response => {\n        this.props.setUserProfile(response.data);\n      })\n  }\n  render() {\n    return (\n      <MainContent {...this.props} />\n    )\n  }\n}\n\nlet mapStateToProps = (state: AppStateType): MSTPType => {\n  return {\n    profile: state.profilePage.profile,\n  }\n}\nlet whithURLDataContainerComponent = withRouter(MainContentContainer)\n\nexport default connect<MSTPType, MDTPType, {}, AppStateType>(mapStateToProps, { setUserProfile: setUserProfileActionCreator })(whithURLDataContainerComponent);\n\n","import React, { ChangeEvent, KeyboardEvent } from 'react';\nimport classes from './ToDoList.module.css';\nimport { TaskType, FilterValuesType } from './ToDoList';\nimport { useState } from 'react';\n\ntype ContainerTodoListPropsType = {\n    title: string,\n    tasks: Array<TaskType>\n    filter: FilterValuesType\n    removeTask: (taskID: string) => void\n    changeFilter: (filter: FilterValuesType) => void\n    addTask: (title: string) => void\n    changeTaskStatus: (taskID: string, isDone: boolean) => void\n}\n\nconst ContainerTodoList: React.FC<ContainerTodoListPropsType> = (props) => {\n    const tasksJSXelements = props.tasks.map(t => {\n        return (\n            <li className={`${t.isDone === true ? 'is-done' : ''} ${classes.customcCheckbox}`} key={t.id}>\n                <input\n\n                    type=\"checkbox\"\n                    onChange={(e) => props.changeTaskStatus(t.id, e.currentTarget.checked)}\n                    checked={t.isDone}\n                    value={t.title}\n                />\n                <span>{t.title}</span>\n                <button onClick={() => props.removeTask(t.id)}>X</button>\n            </li>\n        )\n    })\n\n    const [newTaskTitle, setNewTaskTitle] = useState<string>('');\n    const [error, setError] = useState<boolean>(false);\n\n    const addTask = () => {\n        const trimmedTitle = newTaskTitle.trim();\n        if (trimmedTitle) {\n            props.addTask(trimmedTitle);\n            setNewTaskTitle('');\n        } else {\n            setError(true);\n        }\n        setNewTaskTitle('');\n    }\n    const onNewTitleChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\n        setError(false);\n        setNewTaskTitle(event.currentTarget.value)\n    };\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.ctrlKey || e.key === 'Enter') {\n            addTask();\n        }\n    };\n    const setAll = () => props.changeFilter('all');\n    const setActive = () => props.changeFilter('active');\n    const setCompleted = () => props.changeFilter('completed');\n    const classForAll = props.filter === 'all' ? 'active-filter' : '';\n    const classForActive = props.filter === 'active' ? 'active-filter' : '';\n    const classForCompleted = props.filter === 'completed' ? 'active-filter' : '';\n    const errorMessage = error ? <div style={{ backgroundColor: 'red', color: 'white', fontWeight: 900, textAlign: 'center' }}>Title is required</div> : '';\n    return (\n        <div className={classes.toDoList}>\n            <div>\n                <h3>{props.title}</h3>\n            </div>\n            <input\n                className={error ? 'error' : ''}\n                onChange={onNewTitleChangeHandler}\n                value={newTaskTitle}\n                onKeyPress={onKeyPressHandler}\n                placeholder=\"Write something\"\n            />\n            {errorMessage}\n            <button onClick={addTask}>+</button>\n            <ul>\n                {tasksJSXelements}\n            </ul>\n            <div>\n                <button\n                    className={classForAll}\n                    onClick={setAll}>All</button>\n                <button\n                    className={classForActive}\n                    onClick={setActive}>Active</button>\n                <button\n                    className={classForCompleted}\n                    onClick={setCompleted}>Completed</button>\n            </div>\n        </div>\n    )\n}\nexport default ContainerTodoList;","import classes from './ToDoList.module.css';\nimport ContainerTodoList from './ContainerForToDoList'\nimport { v1 } from 'uuid';\nimport React, { useState } from 'react';\n\nexport type TaskType = {\n    id: string,\n    title: string,\n    isDone: boolean,\n}\nexport type FilterValuesType = 'all' | 'active' | 'completed'\n\nconst ToDoList = () => {\n    let [tasks, setTasks] = useState<Array<TaskType>>([\n        { id: v1(), title: 'HTML', isDone: true },\n        { id: v1(), title: 'CSS', isDone: true },\n        { id: v1(), title: 'React', isDone: true },\n        { id: v1(), title: 'Redux', isDone: true },\n    ])\n\n    let [filter, setFilter] = useState<FilterValuesType>('all')\n\n    const removeTask = (taskID: string) => {\n        setTasks(tasks.filter(t => t.id !== taskID));\n    };\n\n    const addTask = (title: string) => {\n        const newTask: TaskType = {\n            id: v1(),\n            title, // title: title,\n            isDone: false,\n        }\n        setTasks([newTask, ...tasks]);\n    }\n    const changeTaskStatus = (taskID: string, isDone: boolean) => {\n        setTasks(tasks.map(t => t.id === taskID ? { ...t, isDone } : t)); //isDone = isDone:isDone\n    }\n\n    let tasksForRender: Array<TaskType> = tasks;\n    if (filter === 'active') {\n        tasksForRender = tasks.filter(t => t.isDone === false)\n    } else if (filter === 'completed') {\n        tasksForRender = tasks.filter(t => t.isDone === true)\n    }\n    return (\n        <div className={classes.works}>\n            <ContainerTodoList title={'I learned:'} tasks={tasksForRender} filter={filter} removeTask={removeTask} changeFilter={setFilter} addTask={addTask} changeTaskStatus={changeTaskStatus} />\n        </div>\n    )\n}\nexport default ToDoList;","type NumberType = {\n    number: number\n    setNumber: (number: number) => void\n    maxValue: number\n    minValue: number\n    classNameForNumber: string\n}\n\nconst Number: React.FC<NumberType> = ({ number, setNumber, maxValue, minValue, classNameForNumber }) => {\n\n    return (\n        <div style={number !== maxValue ? { backgroundColor: '#E6E6FA' } : { backgroundColor: '#D8BFD8' }}>\n            <div className={classNameForNumber}>{number}</div>\n        </div>\n    )\n}\nexport default Number;","import s from './counter.module.css'\ntype CounterType = {\n    incButton: () => void\n    resetButton: () => void\n    disabledForReset: boolean\n    disabledForInc: boolean\n}\n\nconst Buttons: React.FC<CounterType> = ({ incButton, resetButton, disabledForInc, disabledForReset }) => {\n\n    return (\n        <span >\n            <button className={s.button} onClick={incButton} disabled={disabledForInc}>inc</button>\n            <button className={s.button} onClick={resetButton} disabled={disabledForReset}>reset</button>\n        </span>\n    )\n}\nexport default Buttons;","import React from 'react';\nimport { useState } from 'react';\nimport Number from './Number';\nimport Buttons from './Buttons'\nimport s from './counter.module.css';\n\nconst Counter = () => {\n    let [number, setNumber] = useState<number>(0);\n\n    let maxValue = 5;\n    let minValue = 0;\n\n    let incButton = () => {\n        if (number < maxValue) {\n            setNumber(number + 1);\n        }\n    }\n    let resetButton = () => setNumber(0);\n\n    let classNameForNumber = (number !== maxValue ? `${s.number}` : `${s.number} ${s.forfive}`);\n\n    let disabledForInc = (number === maxValue);\n    let disabledForReset = (number === minValue);\n    return (\n        <div className={s.ac}>\n            <Number number={number} setNumber={setNumber} maxValue={maxValue} minValue={minValue} classNameForNumber={classNameForNumber} />\n            <Buttons incButton={incButton} resetButton={resetButton} disabledForInc={disabledForInc} disabledForReset={disabledForReset} />\n        </div>\n    )\n}\nexport default Counter;","import classes from './Rating.module.css';\nimport { useState } from 'react';\ntype StarPropsType = {\n    selected: boolean;\n    onClick: () => void;\n};\ntype RatingType = {\n    value: number\n    maxValue: number\n};\n\nfunction Star({ selected, onClick }: StarPropsType) {\n    return <span onClick={onClick} style={{ cursor: 'pointer' }}>{selected ? '\\u2605' : '\\u2606'}</span>;\n}\n\nexport default function Rating(props: RatingType) {\n    const [rating, setRating] = useState(props.value);\n\n    return (\n        <div className={classes.ac}>\n            You can change rating\n            <div>\n            {Array(props.maxValue).fill(null).map((_, i) => <Star selected={i < rating} onClick={() => setRating(i + 1)} />)}\n            </div>\n        </div>\n    );\n}","import classes from './Accordion.module.css'\nimport React from 'react';\nimport { useState } from 'react';\n\ntype PropsType2 = {\n    title: string,\n}\nfunction AccordionTitle(props: PropsType2) {\n    return (\n        <h2>\n            {props.title}\n        </h2>\n    )\n}\nfunction AccordionBody() {\n    return (\n        <ul style={{textAlign: 'center'}}>\n            <h4>Three steps to success</h4>\n            <li>1. Choose for yourself one area in which you want to develop and achieve excellent results.</li>\n            <li>2. You must be surrounded by people who are engaged in this business.</li>\n            <li>3. Daily practice. Daily hard work is the key to success. </li>\n        </ul>\n    );\n}\ntype PropsType = {\n    titleValue: string\n}\n\nexport default function Accordion(props: PropsType) {\n    const [collapsed, setCollapsed] = useState(true);\n\n    return (\n        <div className={classes.ac} style= {(collapsed ? {height: '300px'} : {height: '500px'})}>\n            <AccordionTitle title={props.titleValue} />\n            <button onClick={() => setCollapsed(!collapsed)}>{collapsed ? 'Show' : 'Collapse'}</button>\n            {!collapsed && <AccordionBody />}\n        </div>\n    );\n}","import { useState } from 'react';\n\nexport default function OnOff() {\n\n    let [on, setOn] = useState(false);\n\n    const onStyle = {\n        width: '30px',\n        height: '20px',\n        border: '1px solid black',\n        display: 'inline-block',\n        padding: '2px',\n        backgroundColor: on ? 'green' : 'white'\n    };\n    const offStyle = {\n        width: '30px',\n        height: '20px',\n        border: '1px solid black',\n        display: 'inline-block',\n        marginLeft: '2px',\n        padding: '2px',\n        backgroundColor: on ? 'white' : 'red',\n    };\n    const indicatorStyle = {\n        width: '30px',\n        height: '30px',\n        borderRadius: '15px',\n        border: '1px solid black',\n        display: 'inline-block',\n        marginLeft: '10px',\n        backgroundColor: on ? 'green' : 'red',\n    };\n    const mainStyle = {\n        border: '1px solid gray',\n        height: '70px',\n        borderRadius: '25px',\n        padding: '12px',\n    };\n\n    return <div style={mainStyle}>\n        <div style={onStyle} onClick={() => setOn(true)}>On</div>\n        <div style={offStyle} onClick={() => setOn(false)}>Off</div>\n        <div style={indicatorStyle}> </div>\n    </div>\n\n}","import classes from './WorkExamples.module.css';\nimport ToDoList from './ToDoList/ToDoList';\nimport Counter from './Counter/Counter';\nimport Rating from './Rating/Rating';\nimport Accordion from './Accordion/Accordion';\nimport OnOff from './OnOff/OnOff';\n\n\nconst WorkExamples = () => {\n\n    return (\n        <div className={classes.works}>\n            <ToDoList />\n            <Counter />\n            <OnOff />\n            <Accordion titleValue=\"If you want to see something interesting, then click on me\" />\n            <Rating value={3} maxValue={5} />\n        </div>\n    )\n}\nexport default WorkExamples;","import classes from './AboutMe.module.css'\nconst AboutMe = () => {\n    return (\n        <div className={classes.maim}>\n            <div style={{ padding: '20px' }}>I mastered it on my own native js at <a href='https://learn.javascript.ru/'>https://learn.javascript.ru/</a></div>\n            <div style={{ paddingLeft: '20px' }}><b>Completed projects:</b></div>\n            <div style={{ paddingLeft: '20px' }}>\n                <div style={{ paddingLeft: '10px' }}> <b>A</b> single-page application in React with TypeScript connection (props, typing), Redux, which includes the use of hooks: useState (filter, conditional rendering), useEffect.</div>\n                <div style={{ paddingLeft: '10px' }}> <b>T</b>o do List, Counter, Accordin, Rating.</div>\n                <div style={{ paddingLeft: '10px' }}> <b>W</b>riting unit tests for your applications.</div>\n            </div>\n            <div style={{ padding: '20px' }}>GitHub link: <a href='https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/'>https://github.com/Diana-ctrl</a></div>\n            <div style={{ padding: '20px' }}>\n                <div>Links to completed tasks: </div>\n                <div>\n                    <a href='https://leetcode.com/Diana_Lyah/'>https://leetcode.com/Diana_Lyah/</a>\n                </div>\n                <div>\n                    <a href='https://www.codewars.com/users/Diana-ctrl'>https://www.codewars.com/users/Diana-ctrl</a>\n                </div>\n                <div>\n                    <a href='https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/'>https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/</a>\n                </div>\n            </div>\n            <div style={{ padding: '20px' }}>\n                <div>2021</div>\n                Programming courses in <a href='https://it-incubator.by/'>IT-INCUBATOR</a>\n                <div>Front-end development</div>\n                <div>2020</div>\n                <a href='https://abitur.bsuir.by/programmnoe-obespechenie-informatsionnykh-tekhnologiy'>Belarusian State University of Informatics and Radioelectronics</a>\n                <div>Incomplete distance education, Information technology software</div>\n                <div>2019</div>\n                <a href='https://skyengschool.com/'>Skyeng: Online English School</a>\n                <div>General English, Pre-Intermediate</div>\n                <div>2018</div>\n                <a href='https://by.belstu.by/'>Belarusian State Technological University</a>\n                <div>Organic Technology, Certification Specialist</div>\n            </div>\n        </div >\n    )\n\n}\nexport default AboutMe;","import React from 'react';\nimport classes from './MoreInformation.module.css';\nimport AboutMe from './AboutMe'\n\nconst MoreInformation = () => {\n    return (\n        <div className={classes.item}>\n            <AboutMe />\n        </div>\n    )\n}\nexport default MoreInformation;","import classes from './Music.module.css';\n\nconst Music = () => {\n    return (\n        <div className= {classes.item}>\n            Music for soul\n        </div>\n    )\n}\nexport default Music;","import { NavLink } from 'react-router-dom';\nimport { DialogsItemType } from '../../../redux/dialogsReducer';\nimport classes from '../Dialogs.module.css';\n\nconst DialogItem: React.FC<DialogsItemType> = (props) => {\n    return (\n        <div className={classes.dialogs + ' ' + classes.active + ' ' + classes.item}>\n            <img src={props.photo} alt='Can not add' />\n            <NavLink to={'/dialogs/' + props.id} activeClassName={classes.activeLink}>{props.name}</NavLink>\n        </div>\n    )\n}\n\nexport default DialogItem;","import classes from '../Dialogs.module.css';\n\ntype MessagesType = {\n    message: string\n}\nconst Messages: React.FC<MessagesType> = (props) => {\n    return (\n        <div>\n        <div className={classes.massage}>{props.message}</div>\n      </div>\n    )\n}\n\nexport default Messages;","import classes from './Dialogs.module.css';\nimport DialogItem from './DialogsItem/DialogItem';\nimport Messages from './MessagesItem/MessagesItem';\nimport React, { KeyboardEvent } from 'react';\nimport { DialogsType } from './DialogsContainer';\n\nconst Dialogs: React.FC<DialogsType> = (props) => {\n\n    let dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem key = {d.id} id={d.id} name={d.name} photo={d.photo} />);\n    let messagesElements = props.dialogsPage.messages.map(m => <Messages key = {m.id} message={m.message} />);\n\n    let newMessegeElement = React.createRef<HTMLTextAreaElement>();\n\n    function onAddMessage() {\n        props.addMessage();\n    }\n\n    function onMessageChange() {\n        if (newMessegeElement.current) {\n            props.messageChange(newMessegeElement.current.value);\n        }\n    }\n\n    function onPressEnter(e: KeyboardEvent<HTMLTextAreaElement>) {\n        if (e.key === 'Enter') {\n            props.addMessage();\n        }\n    }\n\n    return (\n        <div className={classes.dialogs}>\n            <div className={classes.dialogsItems}>\n                {dialogsElements}\n            </div>\n\n            <div className={classes.messages}>\n                {messagesElements}\n                <textarea ref={newMessegeElement} onChange={onMessageChange} value={props.dialogsPage.newMessageText} onKeyPress={onPressEnter}></textarea>\n                <button onClick={onAddMessage}>Add message</button>\n            </div>\n\n\n        </div>\n    )\n}\nexport default Dialogs;","import {v1} from 'uuid';\ntype AllActionsType = AddMessageActionType | OnMessageChangeActionType;\n\nexport type DialogsItemType = {\n    id: string\n    name: string\n    photo: string\n}\nexport type MessagesType = {\n    id: string\n    message: string\n}\nexport type InitialDialogsPageType = {\n    dialogs: Array<DialogsItemType>\n    messages: Array<MessagesType>\n    newMessageText: string\n}\n\ntype AddMessageActionType = ReturnType<typeof addMessageActionCreator>\ntype OnMessageChangeActionType = ReturnType<typeof onMessageChangeActionCreator>\n\nexport const UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT' as const;\nexport const ADD_MESSAGE = 'ADD-MESSAGE' as const;\n\n\nexport let addMessageActionCreator = () => ({ type: ADD_MESSAGE });\nexport let onMessageChangeActionCreator = (text: string) => ({ type: UPDATE_NEW_MESSAGE_TEXT, newText: text } as const)\n\n\n\nlet initialState = {\n    dialogs: [\n        { id: v1(), name: 'IT-INCUBATOR', photo: 'https://yt3.ggpht.com/ytc/AKedOLTG4icr2chj7SuttAtEnnqP7KS20Xmc3CQcokQ0CQ=s900-c-k-c0x00ffffff-no-rj' },\n        { id: v1(), name: 'Employer', photo: 'https://new-variant.ru/wp-content/uploads/2019/06/%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BE%D0%B4%D0%B0%D1%82%D0%B5%D0%BB%D1%8C.jpg' },\n        { id: v1(), name: 'English courses', photo: 'https://www.slivki.by/znijki-media/w522_322/default/1009921/kursy-obuchenie-minsk-skidka-englishbel-1.jpg' },\n        { id: v1(), name: 'Minsk Technical University', photo: 'https://upload.wikimedia.org/wikipedia/commons/9/94/Don_state_technical_university.JPG' }\n    ],\n    messages: [\n        { id: v1(), message: 'Hi' },\n        { id: v1(), message: 'How are you? How is the learning?' },\n        { id: v1(), message: 'Do our courses help you?' }\n    ],\n    newMessageText: '',\n}\n\nconst dialogsReduser = (state: InitialDialogsPageType = initialState, action: AllActionsType): InitialDialogsPageType => {\n    switch (action.type) {\n        case UPDATE_NEW_MESSAGE_TEXT: {\n            return {...state, newMessageText: action.newText };\n        }\n        case ADD_MESSAGE: {\n            return {...state, \n                newMessageText: '', \n                messages: [...state.messages, { id: v1(), message: state.newMessageText } ]\n            };\n        }\n\n        default:\n            return state;\n    }\n}\nexport default dialogsReduser;","import Dialogs from './Dialogs';\nimport { onMessageChangeActionCreator, addMessageActionCreator } from '../../redux/dialogsReducer';\nimport { InitialDialogsPageType } from '../../redux/dialogsReducer';\nimport { connect } from 'react-redux';\nimport { AppStateType } from '../../redux/reduxStore';\nimport { Dispatch } from 'redux';\n\ntype MapStateToPropsType = {\n    dialogsPage: InitialDialogsPageType\n}\n\ntype MapDispatchToProps = {\n    addMessage: () => void\n    messageChange: (text: string) => void\n}\nexport type DialogsType = MapStateToPropsType & MapDispatchToProps;\n\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        dialogsPage: state.dialogsPage,\n    }\n}\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchToProps => {\n    return {\n        addMessage: () => {\n            dispatch(addMessageActionCreator());\n        },\n        messageChange: (text: string) => {\n            dispatch(onMessageChangeActionCreator(text));\n        }\n    }\n}\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs); // connect() - первым вызовом функции настрашиваем контейнерную компоненту\n// она создает контейнерную компоненту, внутри контейнерной компоненты она рендарит призентационную компоненту и внутрь призентационной компоненты в качестве пропсов(атрибутов) передает свойства, которые  'сидят в объектах из первого вызова функции'\nexport default DialogsContainer;\n\n\n//     // store => 3 methods => dispatch(), getState(), subscriber()\n//     // getState() what return => state with two keys\n//     // props.store = {\n//     // getState: () => {\n//     //  _state: {\n// //        dialogsPage:\n//  //       profilePage\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Navbar from './components/Navbar/Navbar';\nimport UsersContainer from './components/Users/UsersConteiner';\nimport MainContentContainer from './components/MainContent/MainContentContainer';\nimport WorkExamples from './components/Work examples/WorkExamples';\nimport MoreInformation from './components/MoreInformation/MoreInformation';\nimport Music from './components/Music/Music';\nimport { Route, useLocation, Redirect } from 'react-router-dom';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\n\n\nfunction App() {\n\n  const location = useLocation();\n\n  if (location.pathname === '/') {\n    return <Redirect to=\"/mainPage\" />\n  }\n\n  return (\n    <div className='app-wrapper'>\n      <Header />\n      <Navbar />\n      <div className='app-wrapper-content'>\n        <Route path={'/mainPage/:userID?'} render={() => <MainContentContainer />} />\n        <Route path={'/moreInformaition'} render={() => <MoreInformation />} />\n        <Route exact path={'/message'} render={() => <DialogsContainer />} />\n        <Route path={'/music'} render={() => <Music />} />\n        <Route path={'/users'} render={() => <UsersContainer />} />\n      </div>\n      <WorkExamples />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers, createStore } from 'redux';\nimport dialogsReducer from './dialogsReducer';\nimport profileReducer from './profileReducer';\nimport usersReducer from './usersReducer';\n\nexport type AppStateType = ReturnType<typeof rootReducer>;\n\nlet rootReducer = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    usersPage: usersReducer,\n});\n\nlet store = createStore(rootReducer);\n\nexport default store;\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/reduxStore'\n\nReactDOM.render(\n  <BrowserRouter basename={'/resume'}>\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}